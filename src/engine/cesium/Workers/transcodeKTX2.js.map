{"version":3,"file":"transcodeKTX2.js","sources":["../../../../Source/Renderer/PixelDatatype.js","../../../../Source/Core/PixelFormat.js","../../../../Source/Core/VulkanConstants.js","../../../../Source/ThirdParty/ktx-parse.js","../../../../Source/WorkersES6/transcodeKTX2.js"],"sourcesContent":["import WebGLConstants from \"../Core/WebGLConstants.js\";\r\n\r\n/**\r\n * The data type of a pixel.\r\n *\r\n * @enum {Number}\r\n * @see PostProcessStage\r\n */\r\nvar PixelDatatype = {\r\n  UNSIGNED_BYTE: WebGLConstants.UNSIGNED_BYTE,\r\n  UNSIGNED_SHORT: WebGLConstants.UNSIGNED_SHORT,\r\n  UNSIGNED_INT: WebGLConstants.UNSIGNED_INT,\r\n  FLOAT: WebGLConstants.FLOAT,\r\n  HALF_FLOAT: WebGLConstants.HALF_FLOAT_OES,\r\n  UNSIGNED_INT_24_8: WebGLConstants.UNSIGNED_INT_24_8,\r\n  UNSIGNED_SHORT_4_4_4_4: WebGLConstants.UNSIGNED_SHORT_4_4_4_4,\r\n  UNSIGNED_SHORT_5_5_5_1: WebGLConstants.UNSIGNED_SHORT_5_5_5_1,\r\n  UNSIGNED_SHORT_5_6_5: WebGLConstants.UNSIGNED_SHORT_5_6_5,\r\n};\r\n\r\n/**\r\n  @private\r\n*/\r\nPixelDatatype.toWebGLConstant = function (pixelDatatype, context) {\r\n  switch (pixelDatatype) {\r\n    case PixelDatatype.UNSIGNED_BYTE:\r\n      return WebGLConstants.UNSIGNED_BYTE;\r\n    case PixelDatatype.UNSIGNED_SHORT:\r\n      return WebGLConstants.UNSIGNED_SHORT;\r\n    case PixelDatatype.UNSIGNED_INT:\r\n      return WebGLConstants.UNSIGNED_INT;\r\n    case PixelDatatype.FLOAT:\r\n      return WebGLConstants.FLOAT;\r\n    case PixelDatatype.HALF_FLOAT:\r\n      return context.webgl2\r\n        ? WebGLConstants.HALF_FLOAT\r\n        : WebGLConstants.HALF_FLOAT_OES;\r\n    case PixelDatatype.UNSIGNED_INT_24_8:\r\n      return WebGLConstants.UNSIGNED_INT_24_8;\r\n    case PixelDatatype.UNSIGNED_SHORT_4_4_4_4:\r\n      return WebGLConstants.UNSIGNED_SHORT_4_4_4_4;\r\n    case PixelDatatype.UNSIGNED_SHORT_5_5_5_1:\r\n      return WebGLConstants.UNSIGNED_SHORT_5_5_5_1;\r\n    case PixelDatatype.UNSIGNED_SHORT_5_6_5:\r\n      return PixelDatatype.UNSIGNED_SHORT_5_6_5;\r\n  }\r\n};\r\n\r\n/**\r\n  @private\r\n*/\r\nPixelDatatype.isPacked = function (pixelDatatype) {\r\n  return (\r\n    pixelDatatype === PixelDatatype.UNSIGNED_INT_24_8 ||\r\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_4_4_4_4 ||\r\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_5_5_1 ||\r\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_6_5\r\n  );\r\n};\r\n\r\n/**\r\n  @private\r\n*/\r\nPixelDatatype.sizeInBytes = function (pixelDatatype) {\r\n  switch (pixelDatatype) {\r\n    case PixelDatatype.UNSIGNED_BYTE:\r\n      return 1;\r\n    case PixelDatatype.UNSIGNED_SHORT:\r\n    case PixelDatatype.UNSIGNED_SHORT_4_4_4_4:\r\n    case PixelDatatype.UNSIGNED_SHORT_5_5_5_1:\r\n    case PixelDatatype.UNSIGNED_SHORT_5_6_5:\r\n    case PixelDatatype.HALF_FLOAT:\r\n      return 2;\r\n    case PixelDatatype.UNSIGNED_INT:\r\n    case PixelDatatype.FLOAT:\r\n    case PixelDatatype.UNSIGNED_INT_24_8:\r\n      return 4;\r\n  }\r\n};\r\n\r\n/**\r\n  @private\r\n*/\r\nPixelDatatype.validate = function (pixelDatatype) {\r\n  return (\r\n    pixelDatatype === PixelDatatype.UNSIGNED_BYTE ||\r\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT ||\r\n    pixelDatatype === PixelDatatype.UNSIGNED_INT ||\r\n    pixelDatatype === PixelDatatype.FLOAT ||\r\n    pixelDatatype === PixelDatatype.HALF_FLOAT ||\r\n    pixelDatatype === PixelDatatype.UNSIGNED_INT_24_8 ||\r\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_4_4_4_4 ||\r\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_5_5_1 ||\r\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_6_5\r\n  );\r\n};\r\n\r\nexport default Object.freeze(PixelDatatype);\r\n","import PixelDatatype from \"../Renderer/PixelDatatype.js\";\r\nimport WebGLConstants from \"./WebGLConstants.js\";\r\n\r\n/**\r\n * The format of a pixel, i.e., the number of components it has and what they represent.\r\n *\r\n * @enum {Number}\r\n */\r\nvar PixelFormat = {\r\n  /**\r\n   * A pixel format containing a depth value.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  DEPTH_COMPONENT: WebGLConstants.DEPTH_COMPONENT,\r\n\r\n  /**\r\n   * A pixel format containing a depth and stencil value, most often used with {@link PixelDatatype.UNSIGNED_INT_24_8}.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  DEPTH_STENCIL: WebGLConstants.DEPTH_STENCIL,\r\n\r\n  /**\r\n   * A pixel format containing an alpha channel.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  ALPHA: WebGLConstants.ALPHA,\r\n\r\n  /**\r\n   * A pixel format containing red, green, and blue channels.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGB: WebGLConstants.RGB,\r\n\r\n  /**\r\n   * A pixel format containing red, green, blue, and alpha channels.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGBA: WebGLConstants.RGBA,\r\n\r\n  /**\r\n   * A pixel format containing a luminance (intensity) channel.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  LUMINANCE: WebGLConstants.LUMINANCE,\r\n\r\n  /**\r\n   * A pixel format containing luminance (intensity) and alpha channels.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  LUMINANCE_ALPHA: WebGLConstants.LUMINANCE_ALPHA,\r\n\r\n  /**\r\n   * A pixel format containing red, green, and blue channels that is DXT1 compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGB_DXT1: WebGLConstants.COMPRESSED_RGB_S3TC_DXT1_EXT,\r\n\r\n  /**\r\n   * A pixel format containing red, green, blue, and alpha channels that is DXT1 compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGBA_DXT1: WebGLConstants.COMPRESSED_RGBA_S3TC_DXT1_EXT,\r\n\r\n  /**\r\n   * A pixel format containing red, green, blue, and alpha channels that is DXT3 compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGBA_DXT3: WebGLConstants.COMPRESSED_RGBA_S3TC_DXT3_EXT,\r\n\r\n  /**\r\n   * A pixel format containing red, green, blue, and alpha channels that is DXT5 compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGBA_DXT5: WebGLConstants.COMPRESSED_RGBA_S3TC_DXT5_EXT,\r\n\r\n  /**\r\n   * A pixel format containing red, green, and blue channels that is PVR 4bpp compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGB_PVRTC_4BPPV1: WebGLConstants.COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\r\n\r\n  /**\r\n   * A pixel format containing red, green, and blue channels that is PVR 2bpp compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGB_PVRTC_2BPPV1: WebGLConstants.COMPRESSED_RGB_PVRTC_2BPPV1_IMG,\r\n\r\n  /**\r\n   * A pixel format containing red, green, blue, and alpha channels that is PVR 4bpp compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGBA_PVRTC_4BPPV1: WebGLConstants.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\r\n\r\n  /**\r\n   * A pixel format containing red, green, blue, and alpha channels that is PVR 2bpp compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGBA_PVRTC_2BPPV1: WebGLConstants.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG,\r\n\r\n  /**\r\n   * A pixel format containing red, green, blue, and alpha channels that is ASTC compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGBA_ASTC: WebGLConstants.COMPRESSED_RGBA_ASTC_4x4_WEBGL,\r\n\r\n  /**\r\n   * A pixel format containing red, green, and blue channels that is ETC1 compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGB_ETC1: WebGLConstants.COMPRESSED_RGB_ETC1_WEBGL,\r\n\r\n  /**\r\n   * A pixel format containing red, green, and blue channels that is ETC2 compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGB8_ETC2: WebGLConstants.COMPRESSED_RGB8_ETC2,\r\n\r\n  /**\r\n   * A pixel format containing red, green, blue, and alpha channels that is ETC2 compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGBA8_ETC2_EAC: WebGLConstants.COMPRESSED_RGBA8_ETC2_EAC,\r\n\r\n  /**\r\n   * A pixel format containing red, green, blue, and alpha channels that is BC7 compressed.\r\n   *\r\n   * @type {Number}\r\n   * @constant\r\n   */\r\n  RGBA_BC7: WebGLConstants.COMPRESSED_RGBA_BPTC_UNORM,\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.componentsLength = function (pixelFormat) {\r\n  switch (pixelFormat) {\r\n    case PixelFormat.RGB:\r\n      return 3;\r\n    case PixelFormat.RGBA:\r\n      return 4;\r\n    case PixelFormat.LUMINANCE_ALPHA:\r\n      return 2;\r\n    case PixelFormat.ALPHA:\r\n    case PixelFormat.LUMINANCE:\r\n      return 1;\r\n    default:\r\n      return 1;\r\n  }\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.validate = function (pixelFormat) {\r\n  return (\r\n    pixelFormat === PixelFormat.DEPTH_COMPONENT ||\r\n    pixelFormat === PixelFormat.DEPTH_STENCIL ||\r\n    pixelFormat === PixelFormat.ALPHA ||\r\n    pixelFormat === PixelFormat.RGB ||\r\n    pixelFormat === PixelFormat.RGBA ||\r\n    pixelFormat === PixelFormat.LUMINANCE ||\r\n    pixelFormat === PixelFormat.LUMINANCE_ALPHA ||\r\n    pixelFormat === PixelFormat.RGB_DXT1 ||\r\n    pixelFormat === PixelFormat.RGBA_DXT1 ||\r\n    pixelFormat === PixelFormat.RGBA_DXT3 ||\r\n    pixelFormat === PixelFormat.RGBA_DXT5 ||\r\n    pixelFormat === PixelFormat.RGB_PVRTC_4BPPV1 ||\r\n    pixelFormat === PixelFormat.RGB_PVRTC_2BPPV1 ||\r\n    pixelFormat === PixelFormat.RGBA_PVRTC_4BPPV1 ||\r\n    pixelFormat === PixelFormat.RGBA_PVRTC_2BPPV1 ||\r\n    pixelFormat === PixelFormat.RGBA_ASTC ||\r\n    pixelFormat === PixelFormat.RGB_ETC1 ||\r\n    pixelFormat === PixelFormat.RGB8_ETC2 ||\r\n    pixelFormat === PixelFormat.RGBA8_ETC2_EAC ||\r\n    pixelFormat === PixelFormat.RGBA_BC7\r\n  );\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.isColorFormat = function (pixelFormat) {\r\n  return (\r\n    pixelFormat === PixelFormat.ALPHA ||\r\n    pixelFormat === PixelFormat.RGB ||\r\n    pixelFormat === PixelFormat.RGBA ||\r\n    pixelFormat === PixelFormat.LUMINANCE ||\r\n    pixelFormat === PixelFormat.LUMINANCE_ALPHA\r\n  );\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.isDepthFormat = function (pixelFormat) {\r\n  return (\r\n    pixelFormat === PixelFormat.DEPTH_COMPONENT ||\r\n    pixelFormat === PixelFormat.DEPTH_STENCIL\r\n  );\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.isCompressedFormat = function (pixelFormat) {\r\n  return (\r\n    pixelFormat === PixelFormat.RGB_DXT1 ||\r\n    pixelFormat === PixelFormat.RGBA_DXT1 ||\r\n    pixelFormat === PixelFormat.RGBA_DXT3 ||\r\n    pixelFormat === PixelFormat.RGBA_DXT5 ||\r\n    pixelFormat === PixelFormat.RGB_PVRTC_4BPPV1 ||\r\n    pixelFormat === PixelFormat.RGB_PVRTC_2BPPV1 ||\r\n    pixelFormat === PixelFormat.RGBA_PVRTC_4BPPV1 ||\r\n    pixelFormat === PixelFormat.RGBA_PVRTC_2BPPV1 ||\r\n    pixelFormat === PixelFormat.RGBA_ASTC ||\r\n    pixelFormat === PixelFormat.RGB_ETC1 ||\r\n    pixelFormat === PixelFormat.RGB8_ETC2 ||\r\n    pixelFormat === PixelFormat.RGBA8_ETC2_EAC ||\r\n    pixelFormat === PixelFormat.RGBA_BC7\r\n  );\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.isDXTFormat = function (pixelFormat) {\r\n  return (\r\n    pixelFormat === PixelFormat.RGB_DXT1 ||\r\n    pixelFormat === PixelFormat.RGBA_DXT1 ||\r\n    pixelFormat === PixelFormat.RGBA_DXT3 ||\r\n    pixelFormat === PixelFormat.RGBA_DXT5\r\n  );\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.isPVRTCFormat = function (pixelFormat) {\r\n  return (\r\n    pixelFormat === PixelFormat.RGB_PVRTC_4BPPV1 ||\r\n    pixelFormat === PixelFormat.RGB_PVRTC_2BPPV1 ||\r\n    pixelFormat === PixelFormat.RGBA_PVRTC_4BPPV1 ||\r\n    pixelFormat === PixelFormat.RGBA_PVRTC_2BPPV1\r\n  );\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.isASTCFormat = function (pixelFormat) {\r\n  return pixelFormat === PixelFormat.RGBA_ASTC;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.isETC1Format = function (pixelFormat) {\r\n  return pixelFormat === PixelFormat.RGB_ETC1;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.isETC2Format = function (pixelFormat) {\r\n  return (\r\n    pixelFormat === PixelFormat.RGB8_ETC2 ||\r\n    pixelFormat === PixelFormat.RGBA8_ETC2_EAC\r\n  );\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.isBC7Format = function (pixelFormat) {\r\n  return pixelFormat === PixelFormat.RGBA_BC7;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.compressedTextureSizeInBytes = function (\r\n  pixelFormat,\r\n  width,\r\n  height\r\n) {\r\n  switch (pixelFormat) {\r\n    case PixelFormat.RGB_DXT1:\r\n    case PixelFormat.RGBA_DXT1:\r\n    case PixelFormat.RGB_ETC1:\r\n    case PixelFormat.RGB8_ETC2:\r\n      return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 8;\r\n\r\n    case PixelFormat.RGBA_DXT3:\r\n    case PixelFormat.RGBA_DXT5:\r\n    case PixelFormat.RGBA_ASTC:\r\n    case PixelFormat.RGBA8_ETC2_EAC:\r\n      return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 16;\r\n\r\n    case PixelFormat.RGB_PVRTC_4BPPV1:\r\n    case PixelFormat.RGBA_PVRTC_4BPPV1:\r\n      return Math.floor((Math.max(width, 8) * Math.max(height, 8) * 4 + 7) / 8);\r\n\r\n    case PixelFormat.RGB_PVRTC_2BPPV1:\r\n    case PixelFormat.RGBA_PVRTC_2BPPV1:\r\n      return Math.floor(\r\n        (Math.max(width, 16) * Math.max(height, 8) * 2 + 7) / 8\r\n      );\r\n\r\n    case PixelFormat.RGBA_BC7:\r\n      return Math.ceil(width / 4) * Math.ceil(height / 4) * 16;\r\n\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.textureSizeInBytes = function (\r\n  pixelFormat,\r\n  pixelDatatype,\r\n  width,\r\n  height\r\n) {\r\n  var componentsLength = PixelFormat.componentsLength(pixelFormat);\r\n  if (PixelDatatype.isPacked(pixelDatatype)) {\r\n    componentsLength = 1;\r\n  }\r\n  return (\r\n    componentsLength * PixelDatatype.sizeInBytes(pixelDatatype) * width * height\r\n  );\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.alignmentInBytes = function (pixelFormat, pixelDatatype, width) {\r\n  var mod =\r\n    PixelFormat.textureSizeInBytes(pixelFormat, pixelDatatype, width, 1) % 4;\r\n  return mod === 0 ? 4 : mod === 2 ? 2 : 1;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.createTypedArray = function (\r\n  pixelFormat,\r\n  pixelDatatype,\r\n  width,\r\n  height\r\n) {\r\n  var constructor;\r\n  var sizeInBytes = PixelDatatype.sizeInBytes(pixelDatatype);\r\n  if (sizeInBytes === Uint8Array.BYTES_PER_ELEMENT) {\r\n    constructor = Uint8Array;\r\n  } else if (sizeInBytes === Uint16Array.BYTES_PER_ELEMENT) {\r\n    constructor = Uint16Array;\r\n  } else if (\r\n    sizeInBytes === Float32Array.BYTES_PER_ELEMENT &&\r\n    pixelDatatype === PixelDatatype.FLOAT\r\n  ) {\r\n    constructor = Float32Array;\r\n  } else {\r\n    constructor = Uint32Array;\r\n  }\r\n\r\n  var size = PixelFormat.componentsLength(pixelFormat) * width * height;\r\n  return new constructor(size);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.flipY = function (\r\n  bufferView,\r\n  pixelFormat,\r\n  pixelDatatype,\r\n  width,\r\n  height\r\n) {\r\n  if (height === 1) {\r\n    return bufferView;\r\n  }\r\n  var flipped = PixelFormat.createTypedArray(\r\n    pixelFormat,\r\n    pixelDatatype,\r\n    width,\r\n    height\r\n  );\r\n  var numberOfComponents = PixelFormat.componentsLength(pixelFormat);\r\n  var textureWidth = width * numberOfComponents;\r\n  for (var i = 0; i < height; ++i) {\r\n    var row = i * width * numberOfComponents;\r\n    var flippedRow = (height - i - 1) * width * numberOfComponents;\r\n    for (var j = 0; j < textureWidth; ++j) {\r\n      flipped[flippedRow + j] = bufferView[row + j];\r\n    }\r\n  }\r\n  return flipped;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPixelFormat.toInternalFormat = function (pixelFormat, pixelDatatype, context) {\r\n  // WebGL 1 require internalFormat to be the same as PixelFormat\r\n  if (!context.webgl2) {\r\n    return pixelFormat;\r\n  }\r\n\r\n  // Convert pixelFormat to correct internalFormat for WebGL 2\r\n  if (pixelFormat === PixelFormat.DEPTH_STENCIL) {\r\n    return WebGLConstants.DEPTH24_STENCIL8;\r\n  }\r\n\r\n  if (pixelFormat === PixelFormat.DEPTH_COMPONENT) {\r\n    if (pixelDatatype === PixelDatatype.UNSIGNED_SHORT) {\r\n      return WebGLConstants.DEPTH_COMPONENT16;\r\n    } else if (pixelDatatype === PixelDatatype.UNSIGNED_INT) {\r\n      return WebGLConstants.DEPTH_COMPONENT24;\r\n    }\r\n  }\r\n\r\n  if (pixelDatatype === PixelDatatype.FLOAT) {\r\n    switch (pixelFormat) {\r\n      case PixelFormat.RGBA:\r\n        return WebGLConstants.RGBA32F;\r\n      case PixelFormat.RGB:\r\n        return WebGLConstants.RGB32F;\r\n      case PixelFormat.RG:\r\n        return WebGLConstants.RG32F;\r\n      case PixelFormat.R:\r\n        return WebGLConstants.R32F;\r\n    }\r\n  }\r\n\r\n  if (pixelDatatype === PixelDatatype.HALF_FLOAT) {\r\n    switch (pixelFormat) {\r\n      case PixelFormat.RGBA:\r\n        return WebGLConstants.RGBA16F;\r\n      case PixelFormat.RGB:\r\n        return WebGLConstants.RGB16F;\r\n      case PixelFormat.RG:\r\n        return WebGLConstants.RG16F;\r\n      case PixelFormat.R:\r\n        return WebGLConstants.R16F;\r\n    }\r\n  }\r\n\r\n  return pixelFormat;\r\n};\r\n\r\nexport default Object.freeze(PixelFormat);\r\n","/**\r\n * Enum containing Vulkan Constant values by name.\r\n *\r\n * These match the constants from the {@link https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#formats-definition|Vulkan 1.2 specification}.\r\n *\r\n * @enum {Number}\r\n * @private\r\n */\r\nvar VulkanConstants = {\r\n  VK_FORMAT_UNDEFINED: 0,\r\n  VK_FORMAT_R4G4_UNORM_PACK8: 1,\r\n  VK_FORMAT_R4G4B4A4_UNORM_PACK16: 2,\r\n  VK_FORMAT_B4G4R4A4_UNORM_PACK16: 3,\r\n  VK_FORMAT_R5G6B5_UNORM_PACK16: 4,\r\n  VK_FORMAT_B5G6R5_UNORM_PACK16: 5,\r\n  VK_FORMAT_R5G5B5A1_UNORM_PACK16: 6,\r\n  VK_FORMAT_B5G5R5A1_UNORM_PACK16: 7,\r\n  VK_FORMAT_A1R5G5B5_UNORM_PACK16: 8,\r\n  VK_FORMAT_R8_UNORM: 9,\r\n  VK_FORMAT_R8_SNORM: 10,\r\n  VK_FORMAT_R8_USCALED: 11,\r\n  VK_FORMAT_R8_SSCALED: 12,\r\n  VK_FORMAT_R8_UINT: 13,\r\n  VK_FORMAT_R8_SINT: 14,\r\n  VK_FORMAT_R8_SRGB: 15,\r\n  VK_FORMAT_R8G8_UNORM: 16,\r\n  VK_FORMAT_R8G8_SNORM: 17,\r\n  VK_FORMAT_R8G8_USCALED: 18,\r\n  VK_FORMAT_R8G8_SSCALED: 19,\r\n  VK_FORMAT_R8G8_UINT: 20,\r\n  VK_FORMAT_R8G8_SINT: 21,\r\n  VK_FORMAT_R8G8_SRGB: 22,\r\n  VK_FORMAT_R8G8B8_UNORM: 23,\r\n  VK_FORMAT_R8G8B8_SNORM: 24,\r\n  VK_FORMAT_R8G8B8_USCALED: 25,\r\n  VK_FORMAT_R8G8B8_SSCALED: 26,\r\n  VK_FORMAT_R8G8B8_UINT: 27,\r\n  VK_FORMAT_R8G8B8_SINT: 28,\r\n  VK_FORMAT_R8G8B8_SRGB: 29,\r\n  VK_FORMAT_B8G8R8_UNORM: 30,\r\n  VK_FORMAT_B8G8R8_SNORM: 31,\r\n  VK_FORMAT_B8G8R8_USCALED: 32,\r\n  VK_FORMAT_B8G8R8_SSCALED: 33,\r\n  VK_FORMAT_B8G8R8_UINT: 34,\r\n  VK_FORMAT_B8G8R8_SINT: 35,\r\n  VK_FORMAT_B8G8R8_SRGB: 36,\r\n  VK_FORMAT_R8G8B8A8_UNORM: 37,\r\n  VK_FORMAT_R8G8B8A8_SNORM: 38,\r\n  VK_FORMAT_R8G8B8A8_USCALED: 39,\r\n  VK_FORMAT_R8G8B8A8_SSCALED: 40,\r\n  VK_FORMAT_R8G8B8A8_UINT: 41,\r\n  VK_FORMAT_R8G8B8A8_SINT: 42,\r\n  VK_FORMAT_R8G8B8A8_SRGB: 43,\r\n  VK_FORMAT_B8G8R8A8_UNORM: 44,\r\n  VK_FORMAT_B8G8R8A8_SNORM: 45,\r\n  VK_FORMAT_B8G8R8A8_USCALED: 46,\r\n  VK_FORMAT_B8G8R8A8_SSCALED: 47,\r\n  VK_FORMAT_B8G8R8A8_UINT: 48,\r\n  VK_FORMAT_B8G8R8A8_SINT: 49,\r\n  VK_FORMAT_B8G8R8A8_SRGB: 50,\r\n  VK_FORMAT_A8B8G8R8_UNORM_PACK32: 51,\r\n  VK_FORMAT_A8B8G8R8_SNORM_PACK32: 52,\r\n  VK_FORMAT_A8B8G8R8_USCALED_PACK32: 53,\r\n  VK_FORMAT_A8B8G8R8_SSCALED_PACK32: 54,\r\n  VK_FORMAT_A8B8G8R8_UINT_PACK32: 55,\r\n  VK_FORMAT_A8B8G8R8_SINT_PACK32: 56,\r\n  VK_FORMAT_A8B8G8R8_SRGB_PACK32: 57,\r\n  VK_FORMAT_A2R10G10B10_UNORM_PACK32: 58,\r\n  VK_FORMAT_A2R10G10B10_SNORM_PACK32: 59,\r\n  VK_FORMAT_A2R10G10B10_USCALED_PACK32: 60,\r\n  VK_FORMAT_A2R10G10B10_SSCALED_PACK32: 61,\r\n  VK_FORMAT_A2R10G10B10_UINT_PACK32: 62,\r\n  VK_FORMAT_A2R10G10B10_SINT_PACK32: 63,\r\n  VK_FORMAT_A2B10G10R10_UNORM_PACK32: 64,\r\n  VK_FORMAT_A2B10G10R10_SNORM_PACK32: 65,\r\n  VK_FORMAT_A2B10G10R10_USCALED_PACK32: 66,\r\n  VK_FORMAT_A2B10G10R10_SSCALED_PACK32: 67,\r\n  VK_FORMAT_A2B10G10R10_UINT_PACK32: 68,\r\n  VK_FORMAT_A2B10G10R10_SINT_PACK32: 69,\r\n  VK_FORMAT_R16_UNORM: 70,\r\n  VK_FORMAT_R16_SNORM: 71,\r\n  VK_FORMAT_R16_USCALED: 72,\r\n  VK_FORMAT_R16_SSCALED: 73,\r\n  VK_FORMAT_R16_UINT: 74,\r\n  VK_FORMAT_R16_SINT: 75,\r\n  VK_FORMAT_R16_SFLOAT: 76,\r\n  VK_FORMAT_R16G16_UNORM: 77,\r\n  VK_FORMAT_R16G16_SNORM: 78,\r\n  VK_FORMAT_R16G16_USCALED: 79,\r\n  VK_FORMAT_R16G16_SSCALED: 80,\r\n  VK_FORMAT_R16G16_UINT: 81,\r\n  VK_FORMAT_R16G16_SINT: 82,\r\n  VK_FORMAT_R16G16_SFLOAT: 83,\r\n  VK_FORMAT_R16G16B16_UNORM: 84,\r\n  VK_FORMAT_R16G16B16_SNORM: 85,\r\n  VK_FORMAT_R16G16B16_USCALED: 86,\r\n  VK_FORMAT_R16G16B16_SSCALED: 87,\r\n  VK_FORMAT_R16G16B16_UINT: 88,\r\n  VK_FORMAT_R16G16B16_SINT: 89,\r\n  VK_FORMAT_R16G16B16_SFLOAT: 90,\r\n  VK_FORMAT_R16G16B16A16_UNORM: 91,\r\n  VK_FORMAT_R16G16B16A16_SNORM: 92,\r\n  VK_FORMAT_R16G16B16A16_USCALED: 93,\r\n  VK_FORMAT_R16G16B16A16_SSCALED: 94,\r\n  VK_FORMAT_R16G16B16A16_UINT: 95,\r\n  VK_FORMAT_R16G16B16A16_SINT: 96,\r\n  VK_FORMAT_R16G16B16A16_SFLOAT: 97,\r\n  VK_FORMAT_R32_UINT: 98,\r\n  VK_FORMAT_R32_SINT: 99,\r\n  VK_FORMAT_R32_SFLOAT: 100,\r\n  VK_FORMAT_R32G32_UINT: 101,\r\n  VK_FORMAT_R32G32_SINT: 102,\r\n  VK_FORMAT_R32G32_SFLOAT: 103,\r\n  VK_FORMAT_R32G32B32_UINT: 104,\r\n  VK_FORMAT_R32G32B32_SINT: 105,\r\n  VK_FORMAT_R32G32B32_SFLOAT: 106,\r\n  VK_FORMAT_R32G32B32A32_UINT: 107,\r\n  VK_FORMAT_R32G32B32A32_SINT: 108,\r\n  VK_FORMAT_R32G32B32A32_SFLOAT: 109,\r\n  VK_FORMAT_R64_UINT: 110,\r\n  VK_FORMAT_R64_SINT: 111,\r\n  VK_FORMAT_R64_SFLOAT: 112,\r\n  VK_FORMAT_R64G64_UINT: 113,\r\n  VK_FORMAT_R64G64_SINT: 114,\r\n  VK_FORMAT_R64G64_SFLOAT: 115,\r\n  VK_FORMAT_R64G64B64_UINT: 116,\r\n  VK_FORMAT_R64G64B64_SINT: 117,\r\n  VK_FORMAT_R64G64B64_SFLOAT: 118,\r\n  VK_FORMAT_R64G64B64A64_UINT: 119,\r\n  VK_FORMAT_R64G64B64A64_SINT: 120,\r\n  VK_FORMAT_R64G64B64A64_SFLOAT: 121,\r\n  VK_FORMAT_B10G11R11_UFLOAT_PACK32: 122,\r\n  VK_FORMAT_E5B9G9R9_UFLOAT_PACK32: 123,\r\n  VK_FORMAT_D16_UNORM: 124,\r\n  VK_FORMAT_X8_D24_UNORM_PACK32: 125,\r\n  VK_FORMAT_D32_SFLOAT: 126,\r\n  VK_FORMAT_S8_UINT: 127,\r\n  VK_FORMAT_D16_UNORM_S8_UINT: 128,\r\n  VK_FORMAT_D24_UNORM_S8_UINT: 129,\r\n  VK_FORMAT_D32_SFLOAT_S8_UINT: 130,\r\n  VK_FORMAT_BC1_RGB_UNORM_BLOCK: 131,\r\n  VK_FORMAT_BC1_RGB_SRGB_BLOCK: 132,\r\n  VK_FORMAT_BC1_RGBA_UNORM_BLOCK: 133,\r\n  VK_FORMAT_BC1_RGBA_SRGB_BLOCK: 134,\r\n  VK_FORMAT_BC2_UNORM_BLOCK: 135,\r\n  VK_FORMAT_BC2_SRGB_BLOCK: 136,\r\n  VK_FORMAT_BC3_UNORM_BLOCK: 137,\r\n  VK_FORMAT_BC3_SRGB_BLOCK: 138,\r\n  VK_FORMAT_BC4_UNORM_BLOCK: 139,\r\n  VK_FORMAT_BC4_SNORM_BLOCK: 140,\r\n  VK_FORMAT_BC5_UNORM_BLOCK: 141,\r\n  VK_FORMAT_BC5_SNORM_BLOCK: 142,\r\n  VK_FORMAT_BC6H_UFLOAT_BLOCK: 143,\r\n  VK_FORMAT_BC6H_SFLOAT_BLOCK: 144,\r\n  VK_FORMAT_BC7_UNORM_BLOCK: 145,\r\n  VK_FORMAT_BC7_SRGB_BLOCK: 146,\r\n  VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK: 147,\r\n  VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK: 148,\r\n  VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK: 149,\r\n  VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK: 150,\r\n  VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK: 151,\r\n  VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK: 152,\r\n  VK_FORMAT_EAC_R11_UNORM_BLOCK: 153,\r\n  VK_FORMAT_EAC_R11_SNORM_BLOCK: 154,\r\n  VK_FORMAT_EAC_R11G11_UNORM_BLOCK: 155,\r\n  VK_FORMAT_EAC_R11G11_SNORM_BLOCK: 156,\r\n  VK_FORMAT_ASTC_4x4_UNORM_BLOCK: 157,\r\n  VK_FORMAT_ASTC_4x4_SRGB_BLOCK: 158,\r\n  VK_FORMAT_ASTC_5x4_UNORM_BLOCK: 159,\r\n  VK_FORMAT_ASTC_5x4_SRGB_BLOCK: 160,\r\n  VK_FORMAT_ASTC_5x5_UNORM_BLOCK: 161,\r\n  VK_FORMAT_ASTC_5x5_SRGB_BLOCK: 162,\r\n  VK_FORMAT_ASTC_6x5_UNORM_BLOCK: 163,\r\n  VK_FORMAT_ASTC_6x5_SRGB_BLOCK: 164,\r\n  VK_FORMAT_ASTC_6x6_UNORM_BLOCK: 165,\r\n  VK_FORMAT_ASTC_6x6_SRGB_BLOCK: 166,\r\n  VK_FORMAT_ASTC_8x5_UNORM_BLOCK: 167,\r\n  VK_FORMAT_ASTC_8x5_SRGB_BLOCK: 168,\r\n  VK_FORMAT_ASTC_8x6_UNORM_BLOCK: 169,\r\n  VK_FORMAT_ASTC_8x6_SRGB_BLOCK: 170,\r\n  VK_FORMAT_ASTC_8x8_UNORM_BLOCK: 171,\r\n  VK_FORMAT_ASTC_8x8_SRGB_BLOCK: 172,\r\n  VK_FORMAT_ASTC_10x5_UNORM_BLOCK: 173,\r\n  VK_FORMAT_ASTC_10x5_SRGB_BLOCK: 174,\r\n  VK_FORMAT_ASTC_10x6_UNORM_BLOCK: 175,\r\n  VK_FORMAT_ASTC_10x6_SRGB_BLOCK: 176,\r\n  VK_FORMAT_ASTC_10x8_UNORM_BLOCK: 177,\r\n  VK_FORMAT_ASTC_10x8_SRGB_BLOCK: 178,\r\n  VK_FORMAT_ASTC_10x10_UNORM_BLOCK: 179,\r\n  VK_FORMAT_ASTC_10x10_SRGB_BLOCK: 180,\r\n  VK_FORMAT_ASTC_12x10_UNORM_BLOCK: 181,\r\n  VK_FORMAT_ASTC_12x10_SRGB_BLOCK: 182,\r\n  VK_FORMAT_ASTC_12x12_UNORM_BLOCK: 183,\r\n  VK_FORMAT_ASTC_12x12_SRGB_BLOCK: 184,\r\n  VK_FORMAT_G8B8G8R8_422_UNORM: 1000156000,\r\n  VK_FORMAT_B8G8R8G8_422_UNORM: 1000156001,\r\n  VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM: 1000156002,\r\n  VK_FORMAT_G8_B8R8_2PLANE_420_UNORM: 1000156003,\r\n  VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM: 1000156004,\r\n  VK_FORMAT_G8_B8R8_2PLANE_422_UNORM: 1000156005,\r\n  VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM: 1000156006,\r\n  VK_FORMAT_R10X6_UNORM_PACK16: 1000156007,\r\n  VK_FORMAT_R10X6G10X6_UNORM_2PACK16: 1000156008,\r\n  VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16: 1000156009,\r\n  VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16: 1000156010,\r\n  VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16: 1000156011,\r\n  VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16: 1000156012,\r\n  VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16: 1000156013,\r\n  VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16: 1000156014,\r\n  VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16: 1000156015,\r\n  VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16: 1000156016,\r\n  VK_FORMAT_R12X4_UNORM_PACK16: 1000156017,\r\n  VK_FORMAT_R12X4G12X4_UNORM_2PACK16: 1000156018,\r\n  VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16: 1000156019,\r\n  VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16: 1000156020,\r\n  VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16: 1000156021,\r\n  VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16: 1000156022,\r\n  VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16: 1000156023,\r\n  VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16: 1000156024,\r\n  VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16: 1000156025,\r\n  VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16: 1000156026,\r\n  VK_FORMAT_G16B16G16R16_422_UNORM: 1000156027,\r\n  VK_FORMAT_B16G16R16G16_422_UNORM: 1000156028,\r\n  VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM: 1000156029,\r\n  VK_FORMAT_G16_B16R16_2PLANE_420_UNORM: 1000156030,\r\n  VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM: 1000156031,\r\n  VK_FORMAT_G16_B16R16_2PLANE_422_UNORM: 1000156032,\r\n  VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM: 1000156033,\r\n  VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG: 1000054000,\r\n  VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG: 1000054001,\r\n  VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG: 1000054002,\r\n  VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG: 1000054003,\r\n  VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG: 1000054004,\r\n  VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG: 1000054005,\r\n  VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG: 1000054006,\r\n  VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG: 1000054007,\r\n  VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT: 1000066000,\r\n  VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT: 1000066001,\r\n  VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT: 1000066002,\r\n  VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT: 1000066003,\r\n  VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT: 1000066004,\r\n  VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT: 1000066005,\r\n  VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT: 1000066006,\r\n  VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT: 1000066007,\r\n  VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT: 1000066008,\r\n  VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT: 1000066009,\r\n  VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT: 1000066010,\r\n  VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT: 1000066011,\r\n  VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT: 1000066012,\r\n  VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT: 1000066013,\r\n  VK_FORMAT_G8B8G8R8_422_UNORM_KHR: 1000156000,\r\n  VK_FORMAT_B8G8R8G8_422_UNORM_KHR: 1000156001,\r\n  VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR: 1000156002,\r\n  VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR: 1000156003,\r\n  VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR: 1000156004,\r\n  VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR: 1000156005,\r\n  VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR: 1000156006,\r\n  VK_FORMAT_R10X6_UNORM_PACK16_KHR: 1000156007,\r\n  VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR: 1000156008,\r\n  VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR: 1000156009,\r\n  VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR: 1000156010,\r\n  VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR: 1000156011,\r\n  VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR: 1000156012,\r\n  VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR: 1000156013,\r\n  VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR: 1000156014,\r\n  VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR: 1000156015,\r\n  VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR: 1000156016,\r\n  VK_FORMAT_R12X4_UNORM_PACK16_KHR: 1000156017,\r\n  VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR: 1000156018,\r\n  VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR: 1000156019,\r\n  VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR: 1000156020,\r\n  VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR: 1000156021,\r\n  VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR: 1000156022,\r\n  VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR: 1000156023,\r\n  VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR: 1000156024,\r\n  VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR: 1000156025,\r\n  VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR: 1000156026,\r\n  VK_FORMAT_G16B16G16R16_422_UNORM_KHR: 1000156027,\r\n  VK_FORMAT_B16G16R16G16_422_UNORM_KHR: 1000156028,\r\n  VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR: 1000156029,\r\n  VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR: 1000156030,\r\n  VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR: 1000156031,\r\n  VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR: 1000156032,\r\n  VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR: 1000156033,\r\n};\r\nexport default Object.freeze(VulkanConstants);\r\n","/* This file is automatically rebuilt by the Cesium build process. */\nconst e=[171,75,84,88,32,50,48,187,13,10,26,10];var n,i,s,a,r,o,l,f;!function(t){t[t.NONE=0]=\"NONE\",t[t.BASISLZ=1]=\"BASISLZ\",t[t.ZSTD=2]=\"ZSTD\",t[t.ZLIB=3]=\"ZLIB\";}(n||(n={})),function(t){t[t.BASICFORMAT=0]=\"BASICFORMAT\";}(i||(i={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.ETC1S=163]=\"ETC1S\",t[t.UASTC=166]=\"UASTC\";}(s||(s={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.SRGB=1]=\"SRGB\";}(a||(a={})),function(t){t[t.UNSPECIFIED=0]=\"UNSPECIFIED\",t[t.LINEAR=1]=\"LINEAR\",t[t.SRGB=2]=\"SRGB\",t[t.ITU=3]=\"ITU\",t[t.NTSC=4]=\"NTSC\",t[t.SLOG=5]=\"SLOG\",t[t.SLOG2=6]=\"SLOG2\";}(r||(r={})),function(t){t[t.ALPHA_STRAIGHT=0]=\"ALPHA_STRAIGHT\",t[t.ALPHA_PREMULTIPLIED=1]=\"ALPHA_PREMULTIPLIED\";}(o||(o={})),function(t){t[t.RGB=0]=\"RGB\",t[t.RRR=3]=\"RRR\",t[t.GGG=4]=\"GGG\",t[t.AAA=15]=\"AAA\";}(l||(l={})),function(t){t[t.RGB=0]=\"RGB\",t[t.RGBA=3]=\"RGBA\",t[t.RRR=4]=\"RRR\",t[t.RRRG=5]=\"RRRG\";}(f||(f={}));class U{constructor(){this.vkFormat=0,this.typeSize=1,this.pixelWidth=0,this.pixelHeight=0,this.pixelDepth=0,this.layerCount=0,this.faceCount=1,this.supercompressionScheme=n.NONE,this.levels=[],this.dataFormatDescriptor=[{vendorId:0,descriptorType:i.BASICFORMAT,versionNumber:2,descriptorBlockSize:40,colorModel:s.UNSPECIFIED,colorPrimaries:a.SRGB,transferFunction:a.SRGB,flags:o.ALPHA_STRAIGHT,texelBlockDimension:{x:4,y:4,z:1,w:1},bytesPlane:[],samples:[]}],this.keyValue={},this.globalData=null;}}class c{constructor(t,e,n,i){this._dataView=new DataView(t.buffer,t.byteOffset+e,n),this._littleEndian=i,this._offset=0;}_nextUint8(){const t=this._dataView.getUint8(this._offset);return this._offset+=1,t}_nextUint16(){const t=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,t}_nextUint32(){const t=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint64(){const t=this._dataView.getUint32(this._offset,this._littleEndian)+2**32*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,t}_skip(t){return this._offset+=t,this}_scan(t,e=0){const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==e&&i<t;)i++,this._offset++;return i<t&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}}function _(t){return \"undefined\"!=typeof TextDecoder?(new TextDecoder).decode(t):Buffer.from(t).toString(\"utf8\")}function p(t){const n=new Uint8Array(t.buffer,t.byteOffset,e.length);if(n[0]!==e[0]||n[1]!==e[1]||n[2]!==e[2]||n[3]!==e[3]||n[4]!==e[4]||n[5]!==e[5]||n[6]!==e[6]||n[7]!==e[7]||n[8]!==e[8]||n[9]!==e[9]||n[10]!==e[10]||n[11]!==e[11])throw new Error(\"Missing KTX 2.0 identifier.\");const i=new U,s=17*Uint32Array.BYTES_PER_ELEMENT,a=new c(t,e.length,s,!0);i.vkFormat=a._nextUint32(),i.typeSize=a._nextUint32(),i.pixelWidth=a._nextUint32(),i.pixelHeight=a._nextUint32(),i.pixelDepth=a._nextUint32(),i.layerCount=a._nextUint32(),i.faceCount=a._nextUint32();const r=a._nextUint32();i.supercompressionScheme=a._nextUint32();const o=a._nextUint32(),l=a._nextUint32(),f=a._nextUint32(),h=a._nextUint32(),g=a._nextUint64(),p=a._nextUint64(),x=new c(t,e.length+s,3*r*8,!0);for(let e=0;e<r;e++)i.levels.push({levelData:new Uint8Array(t.buffer,t.byteOffset+x._nextUint64(),x._nextUint64()),uncompressedByteLength:x._nextUint64()});const u=new c(t,o,l,!0),y={vendorId:u._skip(4)._nextUint16(),descriptorType:u._nextUint16(),versionNumber:u._nextUint16(),descriptorBlockSize:u._nextUint16(),colorModel:u._nextUint8(),colorPrimaries:u._nextUint8(),transferFunction:u._nextUint8(),flags:u._nextUint8(),texelBlockDimension:{x:u._nextUint8()+1,y:u._nextUint8()+1,z:u._nextUint8()+1,w:u._nextUint8()+1},bytesPlane:[u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8()],samples:[]},D=(y.descriptorBlockSize/4-6)/4;for(let t=0;t<D;t++)y.samples[t]={bitOffset:u._nextUint16(),bitLength:u._nextUint8(),channelID:u._nextUint8(),samplePosition:[u._nextUint8(),u._nextUint8(),u._nextUint8(),u._nextUint8()],sampleLower:u._nextUint32(),sampleUpper:u._nextUint32()};i.dataFormatDescriptor.length=0,i.dataFormatDescriptor.push(y);const b=new c(t,f,h,!0);for(;b._offset<h;){const t=b._nextUint32(),e=b._scan(t),n=_(e),s=b._scan(t-e.byteLength);i.keyValue[n]=n.match(/^ktx/i)?_(s):s,b._offset%4&&b._skip(4-b._offset%4);}if(p<=0)return i;const d=new c(t,g,p,!0),B=d._nextUint16(),w=d._nextUint16(),A=d._nextUint32(),S=d._nextUint32(),m=d._nextUint32(),L=d._nextUint32(),I=[];for(let t=0;t<r;t++)I.push({imageFlags:d._nextUint32(),rgbSliceByteOffset:d._nextUint32(),rgbSliceByteLength:d._nextUint32(),alphaSliceByteOffset:d._nextUint32(),alphaSliceByteLength:d._nextUint32()});const R=g+d._offset,E=R+A,T=E+S,O=T+m,P=new Uint8Array(t.buffer,t.byteOffset+R,A),C=new Uint8Array(t.buffer,t.byteOffset+E,S),F=new Uint8Array(t.buffer,t.byteOffset+T,m),G=new Uint8Array(t.buffer,t.byteOffset+O,L);return i.globalData={endpointCount:B,selectorCount:w,imageDescs:I,endpointsData:P,selectorsData:C,tablesData:F,extendedData:G},i}\n\nexport default p;\n","/* global require */\r\nimport defined from \"../Core/defined.js\";\r\nimport Check from \"../Core/Check.js\";\r\nimport PixelFormat from \"../Core/PixelFormat.js\";\r\nimport RuntimeError from \"../Core/RuntimeError.js\";\r\nimport VulkanConstants from \"../Core//VulkanConstants.js\";\r\nimport PixelDatatype from \"../Renderer/PixelDatatype.js\";\r\nimport createTaskProcessorWorker from \"./createTaskProcessorWorker.js\";\r\nimport ktx_parse from \"../ThirdParty/ktx-parse.js\";\r\n\r\nvar faceOrder = [\r\n  \"positiveX\",\r\n  \"negativeX\",\r\n  \"positiveY\",\r\n  \"negativeY\",\r\n  \"positiveZ\",\r\n  \"negativeZ\",\r\n];\r\n\r\n// Flags\r\nvar colorModelETC1S = 163;\r\nvar colorModelUASTC = 166;\r\n\r\nvar transcoderModule;\r\nfunction transcode(parameters, transferableObjects) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"transcoderModule\", transcoderModule);\r\n  //>>includeEnd('debug');\r\n\r\n  var data = parameters.ktx2Buffer;\r\n  var supportedTargetFormats = parameters.supportedTargetFormats;\r\n  var header;\r\n  try {\r\n    header = ktx_parse(data);\r\n  } catch (e) {\r\n    throw new RuntimeError(\"Invalid KTX2 file.\");\r\n  }\r\n\r\n  if (header.layerCount !== 0) {\r\n    throw new RuntimeError(\"KTX2 texture arrays are not supported.\");\r\n  }\r\n\r\n  if (header.pixelDepth !== 0) {\r\n    throw new RuntimeError(\"KTX2 3D textures are unsupported.\");\r\n  }\r\n\r\n  var dfd = header.dataFormatDescriptor[0];\r\n  var result = new Array(header.levelCount);\r\n\r\n  if (\r\n    header.vkFormat === 0x0 &&\r\n    (dfd.colorModel === colorModelETC1S || dfd.colorModel === colorModelUASTC)\r\n  ) {\r\n    // Compressed, initialize transcoder module\r\n    transcodeCompressed(\r\n      data,\r\n      header,\r\n      supportedTargetFormats,\r\n      transcoderModule,\r\n      transferableObjects,\r\n      result\r\n    );\r\n  } else {\r\n    transferableObjects.push(data.buffer);\r\n    parseUncompressed(header, result);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// Parser for uncompressed\r\nfunction parseUncompressed(header, result) {\r\n  var internalFormat =\r\n    header.vkFormat === VulkanConstants.VK_FORMAT_R8G8B8_SRGB\r\n      ? PixelFormat.RGB\r\n      : PixelFormat.RGBA;\r\n  var datatype;\r\n  if (header.vkFormat === VulkanConstants.VK_FORMAT_R8G8B8A8_UNORM) {\r\n    datatype = PixelDatatype.UNSIGNED_BYTE;\r\n  } else if (\r\n    header.vkFormat === VulkanConstants.VK_FORMAT_R16G16B16A16_SFLOAT\r\n  ) {\r\n    datatype = PixelDatatype.HALF_FLOAT;\r\n  } else if (\r\n    header.vkFormat === VulkanConstants.VK_FORMAT_R32G32B32A32_SFLOAT\r\n  ) {\r\n    datatype = PixelDatatype.FLOAT;\r\n  }\r\n\r\n  for (var i = 0; i < header.levels.length; ++i) {\r\n    var level = {};\r\n    result[i] = level;\r\n    var levelBuffer = header.levels[i].levelData;\r\n\r\n    var width = header.pixelWidth >> i;\r\n    var height = header.pixelHeight >> i;\r\n    var faceLength =\r\n      width * height * PixelFormat.componentsLength(internalFormat);\r\n\r\n    for (var j = 0; j < header.faceCount; ++j) {\r\n      // multiply levelBuffer.byteOffset by the size in bytes of the pixel data type\r\n      var faceByteOffset =\r\n        levelBuffer.byteOffset + faceLength * header.typeSize * j;\r\n      var faceView;\r\n      if (!defined(datatype) || PixelDatatype.sizeInBytes(datatype) === 1) {\r\n        faceView = new Uint8Array(\r\n          levelBuffer.buffer,\r\n          faceByteOffset,\r\n          faceLength\r\n        );\r\n      } else if (PixelDatatype.sizeInBytes(datatype) === 2) {\r\n        faceView = new Uint16Array(\r\n          levelBuffer.buffer,\r\n          faceByteOffset,\r\n          faceLength\r\n        );\r\n      } else {\r\n        faceView = new Float32Array(\r\n          levelBuffer.buffer,\r\n          faceByteOffset,\r\n          faceLength\r\n        );\r\n      }\r\n\r\n      level[faceOrder[j]] = {\r\n        internalFormat: internalFormat,\r\n        datatype: datatype,\r\n        width: width,\r\n        height: height,\r\n        levelBuffer: faceView,\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nfunction transcodeCompressed(\r\n  data,\r\n  header,\r\n  supportedTargetFormats,\r\n  transcoderModule,\r\n  transferableObjects,\r\n  result\r\n) {\r\n  var ktx2File = new transcoderModule.KTX2File(data);\r\n  var width = ktx2File.getWidth();\r\n  var height = ktx2File.getHeight();\r\n  var levels = ktx2File.getLevels();\r\n  var hasAlpha = ktx2File.getHasAlpha();\r\n\r\n  if (!(width > 0) || !(height > 0) || !(levels > 0)) {\r\n    ktx2File.close();\r\n    ktx2File.delete();\r\n    throw new RuntimeError(\"Invalid KTX2 file\");\r\n  }\r\n\r\n  var internalFormat, transcoderFormat;\r\n  var dfd = header.dataFormatDescriptor[0];\r\n  var BasisFormat = transcoderModule.transcoder_texture_format;\r\n\r\n  // Determine target format based on platform support\r\n  if (dfd.colorModel === colorModelETC1S) {\r\n    if (supportedTargetFormats.etc) {\r\n      internalFormat = hasAlpha\r\n        ? PixelFormat.RGBA8_ETC2_EAC\r\n        : PixelFormat.RGB8_ETC2;\r\n      transcoderFormat = hasAlpha\r\n        ? BasisFormat.cTFETC2_RGBA\r\n        : BasisFormat.cTFETC1_RGB;\r\n    } else if (supportedTargetFormats.etc1 && !hasAlpha) {\r\n      internalFormat = PixelFormat.RGB_ETC1;\r\n      transcoderFormat = BasisFormat.cTFETC1_RGB;\r\n    } else if (supportedTargetFormats.s3tc) {\r\n      internalFormat = hasAlpha ? PixelFormat.RGBA_DXT5 : PixelFormat.RGB_DXT1;\r\n      transcoderFormat = hasAlpha\r\n        ? BasisFormat.cTFBC3_RGBA\r\n        : BasisFormat.cTFBC1_RGB;\r\n    } else if (supportedTargetFormats.pvrtc) {\r\n      internalFormat = hasAlpha\r\n        ? PixelFormat.RGBA_PVRTC_4BPPV1\r\n        : PixelFormat.RGB_PVRTC_4BPPV1;\r\n      transcoderFormat = hasAlpha\r\n        ? BasisFormat.cTFPVRTC1_4_RGBA\r\n        : BasisFormat.cTFPVRTC1_4_RGB;\r\n    } else if (supportedTargetFormats.astc) {\r\n      internalFormat = PixelFormat.RGBA_ASTC;\r\n      transcoderFormat = BasisFormat.cTFASTC_4x4_RGBA;\r\n    } else if (supportedTargetFormats.bc7) {\r\n      internalFormat = PixelFormat.RGBA_BC7;\r\n      transcoderFormat = BasisFormat.cTFBC7_RGBA;\r\n    } else {\r\n      throw new RuntimeError(\r\n        \"No transcoding format target available for ETC1S compressed ktx2.\"\r\n      );\r\n    }\r\n  } else if (dfd.colorModel === colorModelUASTC) {\r\n    if (supportedTargetFormats.astc) {\r\n      internalFormat = PixelFormat.RGBA_ASTC;\r\n      transcoderFormat = BasisFormat.cTFASTC_4x4_RGBA;\r\n    } else if (supportedTargetFormats.bc7) {\r\n      internalFormat = PixelFormat.RGBA_BC7;\r\n      transcoderFormat = BasisFormat.cTFBC7_RGBA;\r\n    } else if (supportedTargetFormats.s3tc) {\r\n      internalFormat = hasAlpha ? PixelFormat.RGBA_DXT5 : PixelFormat.RGB_DXT1;\r\n      transcoderFormat = hasAlpha\r\n        ? BasisFormat.cTFBC3_RGBA\r\n        : BasisFormat.cTFBC1_RGB;\r\n    } else if (supportedTargetFormats.etc) {\r\n      internalFormat = hasAlpha\r\n        ? PixelFormat.RGBA8_ETC2_EAC\r\n        : PixelFormat.RGB8_ETC2;\r\n      transcoderFormat = hasAlpha\r\n        ? BasisFormat.cTFETC2_RGBA\r\n        : BasisFormat.cTFETC1_RGB;\r\n    } else if (supportedTargetFormats.etc1 && !hasAlpha) {\r\n      internalFormat = PixelFormat.RGB_ETC1;\r\n      transcoderFormat = BasisFormat.cTFETC1_RGB;\r\n    } else if (supportedTargetFormats.pvrtc) {\r\n      internalFormat = hasAlpha\r\n        ? PixelFormat.RGBA_PVRTC_4BPPV1\r\n        : PixelFormat.RGB_PVRTC_4BPPV1;\r\n      transcoderFormat = hasAlpha\r\n        ? BasisFormat.cTFPVRTC1_4_RGBA\r\n        : BasisFormat.cTFPVRTC1_4_RGB;\r\n    } else {\r\n      throw new RuntimeError(\r\n        \"No transcoding format target available for UASTC compressed ktx2.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  if (!ktx2File.startTranscoding()) {\r\n    ktx2File.close();\r\n    ktx2File.delete();\r\n    throw new RuntimeError(\"startTranscoding() failed\");\r\n  }\r\n\r\n  for (var i = 0; i < header.levels.length; ++i) {\r\n    var level = {};\r\n    result[i] = level;\r\n    width = header.pixelWidth >> i;\r\n    height = header.pixelHeight >> i;\r\n\r\n    // Since supercompressed cubemaps are unsupported, this function\r\n    // does not iterate over KTX2 faces and assumes faceCount = 1.\r\n\r\n    var dstSize = ktx2File.getImageTranscodedSizeInBytes(\r\n      i, // level index\r\n      0, // layer index\r\n      0, // face index\r\n      transcoderFormat.value\r\n    );\r\n    var dst = new Uint8Array(dstSize);\r\n\r\n    var transcoded = ktx2File.transcodeImage(\r\n      dst,\r\n      i, // level index\r\n      0, // layer index\r\n      0, // face index\r\n      transcoderFormat.value,\r\n      0, // get_alpha_for_opaque_formats\r\n      -1, // channel0\r\n      -1 // channel1\r\n    );\r\n\r\n    if (!defined(transcoded)) {\r\n      throw new RuntimeError(\"transcodeImage() failed.\");\r\n    }\r\n\r\n    transferableObjects.push(dst.buffer);\r\n\r\n    level[faceOrder[0]] = {\r\n      internalFormat: internalFormat,\r\n      width: width,\r\n      height: height,\r\n      levelBuffer: dst,\r\n    };\r\n  }\r\n\r\n  ktx2File.close();\r\n  ktx2File.delete();\r\n  return result;\r\n}\r\n\r\nfunction initWorker(compiledModule) {\r\n  transcoderModule = compiledModule;\r\n  transcoderModule.initializeBasis();\r\n\r\n  self.onmessage = createTaskProcessorWorker(transcode);\r\n  self.postMessage(true);\r\n}\r\n\r\nfunction transcodeKTX2(event) {\r\n  var data = event.data;\r\n\r\n  // Expect the first message to be to load a web assembly module\r\n  var wasmConfig = data.webAssemblyConfig;\r\n  if (defined(wasmConfig)) {\r\n    // Require and compile WebAssembly module, or use fallback if not supported\r\n    return require([wasmConfig.modulePath], function (mscBasisTranscoder) {\r\n      if (defined(wasmConfig.wasmBinaryFile)) {\r\n        if (!defined(mscBasisTranscoder)) {\r\n          mscBasisTranscoder = self.MSC_TRANSCODER;\r\n        }\r\n\r\n        mscBasisTranscoder(wasmConfig).then(function (compiledModule) {\r\n          initWorker(compiledModule);\r\n        });\r\n      } else {\r\n        return mscBasisTranscoder().then(function (transcoder) {\r\n          initWorker(transcoder);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\nexport default transcodeKTX2;\r\n"],"names":["PixelDatatype","UNSIGNED_BYTE","WebGLConstants","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","HALF_FLOAT","HALF_FLOAT_OES","UNSIGNED_INT_24_8","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","pixelDatatype","context","webgl2","Object","freeze","PixelFormat","DEPTH_COMPONENT","DEPTH_STENCIL","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","RGB_DXT1","COMPRESSED_RGB_S3TC_DXT1_EXT","RGBA_DXT1","COMPRESSED_RGBA_S3TC_DXT1_EXT","RGBA_DXT3","COMPRESSED_RGBA_S3TC_DXT3_EXT","RGBA_DXT5","COMPRESSED_RGBA_S3TC_DXT5_EXT","RGB_PVRTC_4BPPV1","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","RGB_PVRTC_2BPPV1","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","RGBA_PVRTC_4BPPV1","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","RGBA_PVRTC_2BPPV1","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","RGBA_ASTC","COMPRESSED_RGBA_ASTC_4x4_WEBGL","RGB_ETC1","COMPRESSED_RGB_ETC1_WEBGL","RGB8_ETC2","COMPRESSED_RGB8_ETC2","RGBA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","RGBA_BC7","COMPRESSED_RGBA_BPTC_UNORM","pixelFormat","width","height","Math","floor","max","ceil","componentsLength","isPacked","sizeInBytes","mod","textureSizeInBytes","Uint8Array","BYTES_PER_ELEMENT","Uint16Array","Float32Array","Uint32Array","bufferView","flipped","createTypedArray","numberOfComponents","textureWidth","i","row","flippedRow","j","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_COMPONENT24","RGBA32F","RGB32F","RG","RG32F","R","R32F","RGBA16F","RGB16F","RG16F","R16F","VK_FORMAT_UNDEFINED","VK_FORMAT_R4G4_UNORM_PACK8","VK_FORMAT_R4G4B4A4_UNORM_PACK16","VK_FORMAT_B4G4R4A4_UNORM_PACK16","VK_FORMAT_R5G6B5_UNORM_PACK16","VK_FORMAT_B5G6R5_UNORM_PACK16","VK_FORMAT_R5G5B5A1_UNORM_PACK16","VK_FORMAT_B5G5R5A1_UNORM_PACK16","VK_FORMAT_A1R5G5B5_UNORM_PACK16","VK_FORMAT_R8_UNORM","VK_FORMAT_R8_SNORM","VK_FORMAT_R8_USCALED","VK_FORMAT_R8_SSCALED","VK_FORMAT_R8_UINT","VK_FORMAT_R8_SINT","VK_FORMAT_R8_SRGB","VK_FORMAT_R8G8_UNORM","VK_FORMAT_R8G8_SNORM","VK_FORMAT_R8G8_USCALED","VK_FORMAT_R8G8_SSCALED","VK_FORMAT_R8G8_UINT","VK_FORMAT_R8G8_SINT","VK_FORMAT_R8G8_SRGB","VK_FORMAT_R8G8B8_UNORM","VK_FORMAT_R8G8B8_SNORM","VK_FORMAT_R8G8B8_USCALED","VK_FORMAT_R8G8B8_SSCALED","VK_FORMAT_R8G8B8_UINT","VK_FORMAT_R8G8B8_SINT","VK_FORMAT_R8G8B8_SRGB","VK_FORMAT_B8G8R8_UNORM","VK_FORMAT_B8G8R8_SNORM","VK_FORMAT_B8G8R8_USCALED","VK_FORMAT_B8G8R8_SSCALED","VK_FORMAT_B8G8R8_UINT","VK_FORMAT_B8G8R8_SINT","VK_FORMAT_B8G8R8_SRGB","VK_FORMAT_R8G8B8A8_UNORM","VK_FORMAT_R8G8B8A8_SNORM","VK_FORMAT_R8G8B8A8_USCALED","VK_FORMAT_R8G8B8A8_SSCALED","VK_FORMAT_R8G8B8A8_UINT","VK_FORMAT_R8G8B8A8_SINT","VK_FORMAT_R8G8B8A8_SRGB","VK_FORMAT_B8G8R8A8_UNORM","VK_FORMAT_B8G8R8A8_SNORM","VK_FORMAT_B8G8R8A8_USCALED","VK_FORMAT_B8G8R8A8_SSCALED","VK_FORMAT_B8G8R8A8_UINT","VK_FORMAT_B8G8R8A8_SINT","VK_FORMAT_B8G8R8A8_SRGB","VK_FORMAT_A8B8G8R8_UNORM_PACK32","VK_FORMAT_A8B8G8R8_SNORM_PACK32","VK_FORMAT_A8B8G8R8_USCALED_PACK32","VK_FORMAT_A8B8G8R8_SSCALED_PACK32","VK_FORMAT_A8B8G8R8_UINT_PACK32","VK_FORMAT_A8B8G8R8_SINT_PACK32","VK_FORMAT_A8B8G8R8_SRGB_PACK32","VK_FORMAT_A2R10G10B10_UNORM_PACK32","VK_FORMAT_A2R10G10B10_SNORM_PACK32","VK_FORMAT_A2R10G10B10_USCALED_PACK32","VK_FORMAT_A2R10G10B10_SSCALED_PACK32","VK_FORMAT_A2R10G10B10_UINT_PACK32","VK_FORMAT_A2R10G10B10_SINT_PACK32","VK_FORMAT_A2B10G10R10_UNORM_PACK32","VK_FORMAT_A2B10G10R10_SNORM_PACK32","VK_FORMAT_A2B10G10R10_USCALED_PACK32","VK_FORMAT_A2B10G10R10_SSCALED_PACK32","VK_FORMAT_A2B10G10R10_UINT_PACK32","VK_FORMAT_A2B10G10R10_SINT_PACK32","VK_FORMAT_R16_UNORM","VK_FORMAT_R16_SNORM","VK_FORMAT_R16_USCALED","VK_FORMAT_R16_SSCALED","VK_FORMAT_R16_UINT","VK_FORMAT_R16_SINT","VK_FORMAT_R16_SFLOAT","VK_FORMAT_R16G16_UNORM","VK_FORMAT_R16G16_SNORM","VK_FORMAT_R16G16_USCALED","VK_FORMAT_R16G16_SSCALED","VK_FORMAT_R16G16_UINT","VK_FORMAT_R16G16_SINT","VK_FORMAT_R16G16_SFLOAT","VK_FORMAT_R16G16B16_UNORM","VK_FORMAT_R16G16B16_SNORM","VK_FORMAT_R16G16B16_USCALED","VK_FORMAT_R16G16B16_SSCALED","VK_FORMAT_R16G16B16_UINT","VK_FORMAT_R16G16B16_SINT","VK_FORMAT_R16G16B16_SFLOAT","VK_FORMAT_R16G16B16A16_UNORM","VK_FORMAT_R16G16B16A16_SNORM","VK_FORMAT_R16G16B16A16_USCALED","VK_FORMAT_R16G16B16A16_SSCALED","VK_FORMAT_R16G16B16A16_UINT","VK_FORMAT_R16G16B16A16_SINT","VK_FORMAT_R16G16B16A16_SFLOAT","VK_FORMAT_R32_UINT","VK_FORMAT_R32_SINT","VK_FORMAT_R32_SFLOAT","VK_FORMAT_R32G32_UINT","VK_FORMAT_R32G32_SINT","VK_FORMAT_R32G32_SFLOAT","VK_FORMAT_R32G32B32_UINT","VK_FORMAT_R32G32B32_SINT","VK_FORMAT_R32G32B32_SFLOAT","VK_FORMAT_R32G32B32A32_UINT","VK_FORMAT_R32G32B32A32_SINT","VK_FORMAT_R32G32B32A32_SFLOAT","VK_FORMAT_R64_UINT","VK_FORMAT_R64_SINT","VK_FORMAT_R64_SFLOAT","VK_FORMAT_R64G64_UINT","VK_FORMAT_R64G64_SINT","VK_FORMAT_R64G64_SFLOAT","VK_FORMAT_R64G64B64_UINT","VK_FORMAT_R64G64B64_SINT","VK_FORMAT_R64G64B64_SFLOAT","VK_FORMAT_R64G64B64A64_UINT","VK_FORMAT_R64G64B64A64_SINT","VK_FORMAT_R64G64B64A64_SFLOAT","VK_FORMAT_B10G11R11_UFLOAT_PACK32","VK_FORMAT_E5B9G9R9_UFLOAT_PACK32","VK_FORMAT_D16_UNORM","VK_FORMAT_X8_D24_UNORM_PACK32","VK_FORMAT_D32_SFLOAT","VK_FORMAT_S8_UINT","VK_FORMAT_D16_UNORM_S8_UINT","VK_FORMAT_D24_UNORM_S8_UINT","VK_FORMAT_D32_SFLOAT_S8_UINT","VK_FORMAT_BC1_RGB_UNORM_BLOCK","VK_FORMAT_BC1_RGB_SRGB_BLOCK","VK_FORMAT_BC1_RGBA_UNORM_BLOCK","VK_FORMAT_BC1_RGBA_SRGB_BLOCK","VK_FORMAT_BC2_UNORM_BLOCK","VK_FORMAT_BC2_SRGB_BLOCK","VK_FORMAT_BC3_UNORM_BLOCK","VK_FORMAT_BC3_SRGB_BLOCK","VK_FORMAT_BC4_UNORM_BLOCK","VK_FORMAT_BC4_SNORM_BLOCK","VK_FORMAT_BC5_UNORM_BLOCK","VK_FORMAT_BC5_SNORM_BLOCK","VK_FORMAT_BC6H_UFLOAT_BLOCK","VK_FORMAT_BC6H_SFLOAT_BLOCK","VK_FORMAT_BC7_UNORM_BLOCK","VK_FORMAT_BC7_SRGB_BLOCK","VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK","VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK","VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK","VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK","VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK","VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK","VK_FORMAT_EAC_R11_UNORM_BLOCK","VK_FORMAT_EAC_R11_SNORM_BLOCK","VK_FORMAT_EAC_R11G11_UNORM_BLOCK","VK_FORMAT_EAC_R11G11_SNORM_BLOCK","VK_FORMAT_ASTC_4x4_UNORM_BLOCK","VK_FORMAT_ASTC_4x4_SRGB_BLOCK","VK_FORMAT_ASTC_5x4_UNORM_BLOCK","VK_FORMAT_ASTC_5x4_SRGB_BLOCK","VK_FORMAT_ASTC_5x5_UNORM_BLOCK","VK_FORMAT_ASTC_5x5_SRGB_BLOCK","VK_FORMAT_ASTC_6x5_UNORM_BLOCK","VK_FORMAT_ASTC_6x5_SRGB_BLOCK","VK_FORMAT_ASTC_6x6_UNORM_BLOCK","VK_FORMAT_ASTC_6x6_SRGB_BLOCK","VK_FORMAT_ASTC_8x5_UNORM_BLOCK","VK_FORMAT_ASTC_8x5_SRGB_BLOCK","VK_FORMAT_ASTC_8x6_UNORM_BLOCK","VK_FORMAT_ASTC_8x6_SRGB_BLOCK","VK_FORMAT_ASTC_8x8_UNORM_BLOCK","VK_FORMAT_ASTC_8x8_SRGB_BLOCK","VK_FORMAT_ASTC_10x5_UNORM_BLOCK","VK_FORMAT_ASTC_10x5_SRGB_BLOCK","VK_FORMAT_ASTC_10x6_UNORM_BLOCK","VK_FORMAT_ASTC_10x6_SRGB_BLOCK","VK_FORMAT_ASTC_10x8_UNORM_BLOCK","VK_FORMAT_ASTC_10x8_SRGB_BLOCK","VK_FORMAT_ASTC_10x10_UNORM_BLOCK","VK_FORMAT_ASTC_10x10_SRGB_BLOCK","VK_FORMAT_ASTC_12x10_UNORM_BLOCK","VK_FORMAT_ASTC_12x10_SRGB_BLOCK","VK_FORMAT_ASTC_12x12_UNORM_BLOCK","VK_FORMAT_ASTC_12x12_SRGB_BLOCK","VK_FORMAT_G8B8G8R8_422_UNORM","VK_FORMAT_B8G8R8G8_422_UNORM","VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM","VK_FORMAT_G8_B8R8_2PLANE_420_UNORM","VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM","VK_FORMAT_G8_B8R8_2PLANE_422_UNORM","VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM","VK_FORMAT_R10X6_UNORM_PACK16","VK_FORMAT_R10X6G10X6_UNORM_2PACK16","VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16","VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16","VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16","VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16","VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16","VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16","VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16","VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16","VK_FORMAT_R12X4_UNORM_PACK16","VK_FORMAT_R12X4G12X4_UNORM_2PACK16","VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16","VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16","VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16","VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16","VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16","VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16","VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16","VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16","VK_FORMAT_G16B16G16R16_422_UNORM","VK_FORMAT_B16G16R16G16_422_UNORM","VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM","VK_FORMAT_G16_B16R16_2PLANE_420_UNORM","VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM","VK_FORMAT_G16_B16R16_2PLANE_422_UNORM","VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM","VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG","VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG","VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG","VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG","VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG","VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG","VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG","VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG","VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT","VK_FORMAT_G8B8G8R8_422_UNORM_KHR","VK_FORMAT_B8G8R8G8_422_UNORM_KHR","VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR","VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR","VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR","VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR","VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR","VK_FORMAT_R10X6_UNORM_PACK16_KHR","VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR","VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR","VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR","VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR","VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR","VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR","VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR","VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR","VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR","VK_FORMAT_R12X4_UNORM_PACK16_KHR","VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR","VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR","VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR","VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR","VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR","VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR","VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR","VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR","VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR","VK_FORMAT_G16B16G16R16_422_UNORM_KHR","VK_FORMAT_B16G16R16G16_422_UNORM_KHR","VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR","VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR","VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR","VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR","VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR","e","n","s","a","r","o","l","f","t","NONE","BASISLZ","ZSTD","ZLIB","BASICFORMAT","UNSPECIFIED","ETC1S","UASTC","SRGB","LINEAR","ITU","NTSC","SLOG","SLOG2","ALPHA_STRAIGHT","ALPHA_PREMULTIPLIED","RRR","GGG","AAA","RRRG","U","constructor","this","vkFormat","typeSize","pixelWidth","pixelHeight","pixelDepth","layerCount","faceCount","supercompressionScheme","levels","dataFormatDescriptor","vendorId","descriptorType","versionNumber","descriptorBlockSize","colorModel","colorPrimaries","transferFunction","flags","texelBlockDimension","x","y","z","w","bytesPlane","samples","keyValue","globalData","c","_dataView","DataView","buffer","byteOffset","_littleEndian","_offset","_nextUint8","getUint8","_nextUint16","getUint16","_nextUint32","getUint32","_nextUint64","_skip","_scan","_","TextDecoder","decode","Buffer","from","toString","transcoderModule","faceOrder","transcode","parameters","transferableObjects","Check","typeOf","object","header","data","ktx2Buffer","supportedTargetFormats","length","Error","h","g","p","push","levelData","uncompressedByteLength","u","D","bitOffset","bitLength","channelID","samplePosition","sampleLower","sampleUpper","b","byteLength","match","d","B","A","S","m","L","I","imageFlags","rgbSliceByteOffset","rgbSliceByteLength","alphaSliceByteOffset","alphaSliceByteLength","E","T","O","P","C","F","G","endpointCount","selectorCount","imageDescs","endpointsData","selectorsData","tablesData","extendedData","ktx_parse","RuntimeError","dfd","result","Array","levelCount","datatype","internalFormat","VulkanConstants","level","levelBuffer","faceLength","faceView","faceByteOffset","defined","parseUncompressed","transcoderFormat","ktx2File","KTX2File","getWidth","getHeight","getLevels","hasAlpha","getHasAlpha","close","delete","BasisFormat","transcoder_texture_format","etc","cTFETC2_RGBA","cTFETC1_RGB","etc1","s3tc","cTFBC3_RGBA","cTFBC1_RGB","pvrtc","cTFPVRTC1_4_RGBA","cTFPVRTC1_4_RGB","astc","cTFASTC_4x4_RGBA","bc7","cTFBC7_RGBA","startTranscoding","dstSize","getImageTranscodedSizeInBytes","value","dst","transcoded","transcodeImage","transcodeCompressed","initWorker","compiledModule","initializeBasis","self","onmessage","createTaskProcessorWorker","postMessage","event","wasmConfig","webAssemblyConfig","require","modulePath","mscBasisTranscoder","wasmBinaryFile","then","transcoder","MSC_TRANSCODER"],"mappings":"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"}