{"version":3,"file":"combine-8ce3f24b.js","sources":["../../../../Source/Core/combine.js"],"sourcesContent":["import defaultValue from \"./defaultValue.js\";\r\nimport defined from \"./defined.js\";\r\n\r\n/**\r\n * Merges two objects, copying their properties onto a new combined object. When two objects have the same\r\n * property, the value of the property on the first object is used.  If either object is undefined,\r\n * it will be treated as an empty object.\r\n *\r\n * @example\r\n * var object1 = {\r\n *     propOne : 1,\r\n *     propTwo : {\r\n *         value1 : 10\r\n *     }\r\n * }\r\n * var object2 = {\r\n *     propTwo : 2\r\n * }\r\n * var final = Cesium.combine(object1, object2);\r\n *\r\n * // final === {\r\n * //     propOne : 1,\r\n * //     propTwo : {\r\n * //         value1 : 10\r\n * //     }\r\n * // }\r\n *\r\n * @param {Object} [object1] The first object to merge.\r\n * @param {Object} [object2] The second object to merge.\r\n * @param {Boolean} [deep=false] Perform a recursive merge.\r\n * @returns {Object} The combined object containing all properties from both objects.\r\n *\r\n * @function\r\n */\r\nfunction combine(object1, object2, deep) {\r\n  deep = defaultValue(deep, false);\r\n\r\n  var result = {};\r\n\r\n  var object1Defined = defined(object1);\r\n  var object2Defined = defined(object2);\r\n  var property;\r\n  var object1Value;\r\n  var object2Value;\r\n  if (object1Defined) {\r\n    for (property in object1) {\r\n      if (object1.hasOwnProperty(property)) {\r\n        object1Value = object1[property];\r\n        if (\r\n          object2Defined &&\r\n          deep &&\r\n          typeof object1Value === \"object\" &&\r\n          object2.hasOwnProperty(property)\r\n        ) {\r\n          object2Value = object2[property];\r\n          if (typeof object2Value === \"object\") {\r\n            result[property] = combine(object1Value, object2Value, deep);\r\n          } else {\r\n            result[property] = object1Value;\r\n          }\r\n        } else {\r\n          result[property] = object1Value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (object2Defined) {\r\n    for (property in object2) {\r\n      if (\r\n        object2.hasOwnProperty(property) &&\r\n        !result.hasOwnProperty(property)\r\n      ) {\r\n        object2Value = object2[property];\r\n        result[property] = object2Value;\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\nexport default combine;\r\n"],"names":["combine","object1","object2","deep","defaultValue","property","object1Value","object2Value","result","object1Defined","defined","object2Defined","hasOwnProperty"],"mappings":"2EAkCA,SAASA,EAAQC,EAASC,EAASC,GACjCA,EAAOC,eAAaD,GAAM,GAE1B,IAIIE,EACAC,EACAC,EANAC,EAAS,GAETC,EAAiBC,UAAQT,GACzBU,EAAiBD,UAAQR,GAI7B,GAAIO,EACF,IAAKJ,KAAYJ,EACXA,EAAQW,eAAeP,KACzBC,EAAeL,EAAQI,GAErBM,GACAR,GACwB,iBAAjBG,GACPJ,EAAQU,eAAeP,IAEvBE,EAAeL,EAAQG,GAErBG,EAAOH,GADmB,iBAAjBE,EACUP,EAAQM,EAAcC,EAAcJ,GAEpCG,GAGrBE,EAAOH,GAAYC,GAK3B,GAAIK,EACF,IAAKN,KAAYH,EAEbA,EAAQU,eAAeP,KACtBG,EAAOI,eAAeP,KAEvBE,EAAeL,EAAQG,GACvBG,EAAOH,GAAYE,GAIzB,OAAOC"}