{"version":3,"file":"BoxGeometry-8355222d.js","sources":["../../../../Source/Core/BoxGeometry.js"],"sourcesContent":["import arrayFill from \"./arrayFill.js\";\r\nimport BoundingSphere from \"./BoundingSphere.js\";\r\nimport Cartesian3 from \"./Cartesian3.js\";\r\nimport Check from \"./Check.js\";\r\nimport ComponentDatatype from \"./ComponentDatatype.js\";\r\nimport defaultValue from \"./defaultValue.js\";\r\nimport defined from \"./defined.js\";\r\nimport DeveloperError from \"./DeveloperError.js\";\r\nimport Geometry from \"./Geometry.js\";\r\nimport GeometryAttribute from \"./GeometryAttribute.js\";\r\nimport GeometryAttributes from \"./GeometryAttributes.js\";\r\nimport GeometryOffsetAttribute from \"./GeometryOffsetAttribute.js\";\r\nimport PrimitiveType from \"./PrimitiveType.js\";\r\nimport VertexFormat from \"./VertexFormat.js\";\r\n\r\nvar diffScratch = new Cartesian3();\r\n\r\n/**\r\n * Describes a cube centered at the origin.\r\n *\r\n * @alias BoxGeometry\r\n * @constructor\r\n *\r\n * @param {Object} options Object with the following properties:\r\n * @param {Cartesian3} options.minimum The minimum x, y, and z coordinates of the box.\r\n * @param {Cartesian3} options.maximum The maximum x, y, and z coordinates of the box.\r\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\r\n *\r\n * @see BoxGeometry.fromDimensions\r\n * @see BoxGeometry.createGeometry\r\n * @see Packable\r\n *\r\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Box.html|Cesium Sandcastle Box Demo}\r\n *\r\n * @example\r\n * var box = new Cesium.BoxGeometry({\r\n *   vertexFormat : Cesium.VertexFormat.POSITION_ONLY,\r\n *   maximum : new Cesium.Cartesian3(250000.0, 250000.0, 250000.0),\r\n *   minimum : new Cesium.Cartesian3(-250000.0, -250000.0, -250000.0)\r\n * });\r\n * var geometry = Cesium.BoxGeometry.createGeometry(box);\r\n */\r\nfunction BoxGeometry(options) {\r\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n  var min = options.minimum;\r\n  var max = options.maximum;\r\n\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"min\", min);\r\n  Check.typeOf.object(\"max\", max);\r\n  if (\r\n    defined(options.offsetAttribute) &&\r\n    options.offsetAttribute === GeometryOffsetAttribute.TOP\r\n  ) {\r\n    throw new DeveloperError(\r\n      \"GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.\"\r\n    );\r\n  }\r\n  //>>includeEnd('debug');\r\n\r\n  var vertexFormat = defaultValue(options.vertexFormat, VertexFormat.DEFAULT);\r\n\r\n  this._minimum = Cartesian3.clone(min);\r\n  this._maximum = Cartesian3.clone(max);\r\n  this._vertexFormat = vertexFormat;\r\n  this._offsetAttribute = options.offsetAttribute;\r\n  this._workerName = \"createBoxGeometry\";\r\n}\r\n\r\n/**\r\n * Creates a cube centered at the origin given its dimensions.\r\n *\r\n * @param {Object} options Object with the following properties:\r\n * @param {Cartesian3} options.dimensions The width, depth, and height of the box stored in the x, y, and z coordinates of the <code>Cartesian3</code>, respectively.\r\n * @param {VertexFormat} [options.vertexFormat=VertexFormat.DEFAULT] The vertex attributes to be computed.\r\n * @returns {BoxGeometry}\r\n *\r\n * @exception {DeveloperError} All dimensions components must be greater than or equal to zero.\r\n *\r\n *\r\n * @example\r\n * var box = Cesium.BoxGeometry.fromDimensions({\r\n *   vertexFormat : Cesium.VertexFormat.POSITION_ONLY,\r\n *   dimensions : new Cesium.Cartesian3(500000.0, 500000.0, 500000.0)\r\n * });\r\n * var geometry = Cesium.BoxGeometry.createGeometry(box);\r\n *\r\n * @see BoxGeometry.createGeometry\r\n */\r\nBoxGeometry.fromDimensions = function (options) {\r\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n  var dimensions = options.dimensions;\r\n\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"dimensions\", dimensions);\r\n  Check.typeOf.number.greaterThanOrEquals(\"dimensions.x\", dimensions.x, 0);\r\n  Check.typeOf.number.greaterThanOrEquals(\"dimensions.y\", dimensions.y, 0);\r\n  Check.typeOf.number.greaterThanOrEquals(\"dimensions.z\", dimensions.z, 0);\r\n  //>>includeEnd('debug');\r\n\r\n  var corner = Cartesian3.multiplyByScalar(dimensions, 0.5, new Cartesian3());\r\n\r\n  return new BoxGeometry({\r\n    minimum: Cartesian3.negate(corner, new Cartesian3()),\r\n    maximum: corner,\r\n    vertexFormat: options.vertexFormat,\r\n    offsetAttribute: options.offsetAttribute,\r\n  });\r\n};\r\n\r\n/**\r\n * Creates a cube from the dimensions of an AxisAlignedBoundingBox.\r\n *\r\n * @param {AxisAlignedBoundingBox} boundingBox A description of the AxisAlignedBoundingBox.\r\n * @returns {BoxGeometry}\r\n *\r\n *\r\n *\r\n * @example\r\n * var aabb = Cesium.AxisAlignedBoundingBox.fromPoints(Cesium.Cartesian3.fromDegreesArray([\r\n *      -72.0, 40.0,\r\n *      -70.0, 35.0,\r\n *      -75.0, 30.0,\r\n *      -70.0, 30.0,\r\n *      -68.0, 40.0\r\n * ]));\r\n * var box = Cesium.BoxGeometry.fromAxisAlignedBoundingBox(aabb);\r\n *\r\n * @see BoxGeometry.createGeometry\r\n */\r\nBoxGeometry.fromAxisAlignedBoundingBox = function (boundingBox) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"boundingBox\", boundingBox);\r\n  //>>includeEnd('debug');\r\n\r\n  return new BoxGeometry({\r\n    minimum: boundingBox.minimum,\r\n    maximum: boundingBox.maximum,\r\n  });\r\n};\r\n\r\n/**\r\n * The number of elements used to pack the object into an array.\r\n * @type {Number}\r\n */\r\nBoxGeometry.packedLength =\r\n  2 * Cartesian3.packedLength + VertexFormat.packedLength + 1;\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {BoxGeometry} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nBoxGeometry.pack = function (value, array, startingIndex) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"value\", value);\r\n  Check.defined(\"array\", array);\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  Cartesian3.pack(value._minimum, array, startingIndex);\r\n  Cartesian3.pack(\r\n    value._maximum,\r\n    array,\r\n    startingIndex + Cartesian3.packedLength\r\n  );\r\n  VertexFormat.pack(\r\n    value._vertexFormat,\r\n    array,\r\n    startingIndex + 2 * Cartesian3.packedLength\r\n  );\r\n  array[\r\n    startingIndex + 2 * Cartesian3.packedLength + VertexFormat.packedLength\r\n  ] = defaultValue(value._offsetAttribute, -1);\r\n\r\n  return array;\r\n};\r\n\r\nvar scratchMin = new Cartesian3();\r\nvar scratchMax = new Cartesian3();\r\nvar scratchVertexFormat = new VertexFormat();\r\nvar scratchOptions = {\r\n  minimum: scratchMin,\r\n  maximum: scratchMax,\r\n  vertexFormat: scratchVertexFormat,\r\n  offsetAttribute: undefined,\r\n};\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {BoxGeometry} [result] The object into which to store the result.\r\n * @returns {BoxGeometry} The modified result parameter or a new BoxGeometry instance if one was not provided.\r\n */\r\nBoxGeometry.unpack = function (array, startingIndex, result) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.defined(\"array\", array);\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  var min = Cartesian3.unpack(array, startingIndex, scratchMin);\r\n  var max = Cartesian3.unpack(\r\n    array,\r\n    startingIndex + Cartesian3.packedLength,\r\n    scratchMax\r\n  );\r\n  var vertexFormat = VertexFormat.unpack(\r\n    array,\r\n    startingIndex + 2 * Cartesian3.packedLength,\r\n    scratchVertexFormat\r\n  );\r\n  var offsetAttribute =\r\n    array[\r\n      startingIndex + 2 * Cartesian3.packedLength + VertexFormat.packedLength\r\n    ];\r\n\r\n  if (!defined(result)) {\r\n    scratchOptions.offsetAttribute =\r\n      offsetAttribute === -1 ? undefined : offsetAttribute;\r\n    return new BoxGeometry(scratchOptions);\r\n  }\r\n\r\n  result._minimum = Cartesian3.clone(min, result._minimum);\r\n  result._maximum = Cartesian3.clone(max, result._maximum);\r\n  result._vertexFormat = VertexFormat.clone(vertexFormat, result._vertexFormat);\r\n  result._offsetAttribute =\r\n    offsetAttribute === -1 ? undefined : offsetAttribute;\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Computes the geometric representation of a box, including its vertices, indices, and a bounding sphere.\r\n *\r\n * @param {BoxGeometry} boxGeometry A description of the box.\r\n * @returns {Geometry|undefined} The computed vertices and indices.\r\n */\r\nBoxGeometry.createGeometry = function (boxGeometry) {\r\n  var min = boxGeometry._minimum;\r\n  var max = boxGeometry._maximum;\r\n  var vertexFormat = boxGeometry._vertexFormat;\r\n\r\n  if (Cartesian3.equals(min, max)) {\r\n    return;\r\n  }\r\n\r\n  var attributes = new GeometryAttributes();\r\n  var indices;\r\n  var positions;\r\n\r\n  if (\r\n    vertexFormat.position &&\r\n    (vertexFormat.st ||\r\n      vertexFormat.normal ||\r\n      vertexFormat.tangent ||\r\n      vertexFormat.bitangent)\r\n  ) {\r\n    if (vertexFormat.position) {\r\n      // 8 corner points.  Duplicated 3 times each for each incident edge/face.\r\n      positions = new Float64Array(6 * 4 * 3);\r\n\r\n      // +z face\r\n      positions[0] = min.x;\r\n      positions[1] = min.y;\r\n      positions[2] = max.z;\r\n      positions[3] = max.x;\r\n      positions[4] = min.y;\r\n      positions[5] = max.z;\r\n      positions[6] = max.x;\r\n      positions[7] = max.y;\r\n      positions[8] = max.z;\r\n      positions[9] = min.x;\r\n      positions[10] = max.y;\r\n      positions[11] = max.z;\r\n\r\n      // -z face\r\n      positions[12] = min.x;\r\n      positions[13] = min.y;\r\n      positions[14] = min.z;\r\n      positions[15] = max.x;\r\n      positions[16] = min.y;\r\n      positions[17] = min.z;\r\n      positions[18] = max.x;\r\n      positions[19] = max.y;\r\n      positions[20] = min.z;\r\n      positions[21] = min.x;\r\n      positions[22] = max.y;\r\n      positions[23] = min.z;\r\n\r\n      // +x face\r\n      positions[24] = max.x;\r\n      positions[25] = min.y;\r\n      positions[26] = min.z;\r\n      positions[27] = max.x;\r\n      positions[28] = max.y;\r\n      positions[29] = min.z;\r\n      positions[30] = max.x;\r\n      positions[31] = max.y;\r\n      positions[32] = max.z;\r\n      positions[33] = max.x;\r\n      positions[34] = min.y;\r\n      positions[35] = max.z;\r\n\r\n      // -x face\r\n      positions[36] = min.x;\r\n      positions[37] = min.y;\r\n      positions[38] = min.z;\r\n      positions[39] = min.x;\r\n      positions[40] = max.y;\r\n      positions[41] = min.z;\r\n      positions[42] = min.x;\r\n      positions[43] = max.y;\r\n      positions[44] = max.z;\r\n      positions[45] = min.x;\r\n      positions[46] = min.y;\r\n      positions[47] = max.z;\r\n\r\n      // +y face\r\n      positions[48] = min.x;\r\n      positions[49] = max.y;\r\n      positions[50] = min.z;\r\n      positions[51] = max.x;\r\n      positions[52] = max.y;\r\n      positions[53] = min.z;\r\n      positions[54] = max.x;\r\n      positions[55] = max.y;\r\n      positions[56] = max.z;\r\n      positions[57] = min.x;\r\n      positions[58] = max.y;\r\n      positions[59] = max.z;\r\n\r\n      // -y face\r\n      positions[60] = min.x;\r\n      positions[61] = min.y;\r\n      positions[62] = min.z;\r\n      positions[63] = max.x;\r\n      positions[64] = min.y;\r\n      positions[65] = min.z;\r\n      positions[66] = max.x;\r\n      positions[67] = min.y;\r\n      positions[68] = max.z;\r\n      positions[69] = min.x;\r\n      positions[70] = min.y;\r\n      positions[71] = max.z;\r\n\r\n      attributes.position = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.DOUBLE,\r\n        componentsPerAttribute: 3,\r\n        values: positions,\r\n      });\r\n    }\r\n\r\n    if (vertexFormat.normal) {\r\n      var normals = new Float32Array(6 * 4 * 3);\r\n\r\n      // +z face\r\n      normals[0] = 0.0;\r\n      normals[1] = 0.0;\r\n      normals[2] = 1.0;\r\n      normals[3] = 0.0;\r\n      normals[4] = 0.0;\r\n      normals[5] = 1.0;\r\n      normals[6] = 0.0;\r\n      normals[7] = 0.0;\r\n      normals[8] = 1.0;\r\n      normals[9] = 0.0;\r\n      normals[10] = 0.0;\r\n      normals[11] = 1.0;\r\n\r\n      // -z face\r\n      normals[12] = 0.0;\r\n      normals[13] = 0.0;\r\n      normals[14] = -1.0;\r\n      normals[15] = 0.0;\r\n      normals[16] = 0.0;\r\n      normals[17] = -1.0;\r\n      normals[18] = 0.0;\r\n      normals[19] = 0.0;\r\n      normals[20] = -1.0;\r\n      normals[21] = 0.0;\r\n      normals[22] = 0.0;\r\n      normals[23] = -1.0;\r\n\r\n      // +x face\r\n      normals[24] = 1.0;\r\n      normals[25] = 0.0;\r\n      normals[26] = 0.0;\r\n      normals[27] = 1.0;\r\n      normals[28] = 0.0;\r\n      normals[29] = 0.0;\r\n      normals[30] = 1.0;\r\n      normals[31] = 0.0;\r\n      normals[32] = 0.0;\r\n      normals[33] = 1.0;\r\n      normals[34] = 0.0;\r\n      normals[35] = 0.0;\r\n\r\n      // -x face\r\n      normals[36] = -1.0;\r\n      normals[37] = 0.0;\r\n      normals[38] = 0.0;\r\n      normals[39] = -1.0;\r\n      normals[40] = 0.0;\r\n      normals[41] = 0.0;\r\n      normals[42] = -1.0;\r\n      normals[43] = 0.0;\r\n      normals[44] = 0.0;\r\n      normals[45] = -1.0;\r\n      normals[46] = 0.0;\r\n      normals[47] = 0.0;\r\n\r\n      // +y face\r\n      normals[48] = 0.0;\r\n      normals[49] = 1.0;\r\n      normals[50] = 0.0;\r\n      normals[51] = 0.0;\r\n      normals[52] = 1.0;\r\n      normals[53] = 0.0;\r\n      normals[54] = 0.0;\r\n      normals[55] = 1.0;\r\n      normals[56] = 0.0;\r\n      normals[57] = 0.0;\r\n      normals[58] = 1.0;\r\n      normals[59] = 0.0;\r\n\r\n      // -y face\r\n      normals[60] = 0.0;\r\n      normals[61] = -1.0;\r\n      normals[62] = 0.0;\r\n      normals[63] = 0.0;\r\n      normals[64] = -1.0;\r\n      normals[65] = 0.0;\r\n      normals[66] = 0.0;\r\n      normals[67] = -1.0;\r\n      normals[68] = 0.0;\r\n      normals[69] = 0.0;\r\n      normals[70] = -1.0;\r\n      normals[71] = 0.0;\r\n\r\n      attributes.normal = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 3,\r\n        values: normals,\r\n      });\r\n    }\r\n\r\n    if (vertexFormat.st) {\r\n      var texCoords = new Float32Array(6 * 4 * 2);\r\n\r\n      // +z face\r\n      texCoords[0] = 0.0;\r\n      texCoords[1] = 0.0;\r\n      texCoords[2] = 1.0;\r\n      texCoords[3] = 0.0;\r\n      texCoords[4] = 1.0;\r\n      texCoords[5] = 1.0;\r\n      texCoords[6] = 0.0;\r\n      texCoords[7] = 1.0;\r\n\r\n      // -z face\r\n      texCoords[8] = 1.0;\r\n      texCoords[9] = 0.0;\r\n      texCoords[10] = 0.0;\r\n      texCoords[11] = 0.0;\r\n      texCoords[12] = 0.0;\r\n      texCoords[13] = 1.0;\r\n      texCoords[14] = 1.0;\r\n      texCoords[15] = 1.0;\r\n\r\n      //+x face\r\n      texCoords[16] = 0.0;\r\n      texCoords[17] = 0.0;\r\n      texCoords[18] = 1.0;\r\n      texCoords[19] = 0.0;\r\n      texCoords[20] = 1.0;\r\n      texCoords[21] = 1.0;\r\n      texCoords[22] = 0.0;\r\n      texCoords[23] = 1.0;\r\n\r\n      // -x face\r\n      texCoords[24] = 1.0;\r\n      texCoords[25] = 0.0;\r\n      texCoords[26] = 0.0;\r\n      texCoords[27] = 0.0;\r\n      texCoords[28] = 0.0;\r\n      texCoords[29] = 1.0;\r\n      texCoords[30] = 1.0;\r\n      texCoords[31] = 1.0;\r\n\r\n      // +y face\r\n      texCoords[32] = 1.0;\r\n      texCoords[33] = 0.0;\r\n      texCoords[34] = 0.0;\r\n      texCoords[35] = 0.0;\r\n      texCoords[36] = 0.0;\r\n      texCoords[37] = 1.0;\r\n      texCoords[38] = 1.0;\r\n      texCoords[39] = 1.0;\r\n\r\n      // -y face\r\n      texCoords[40] = 0.0;\r\n      texCoords[41] = 0.0;\r\n      texCoords[42] = 1.0;\r\n      texCoords[43] = 0.0;\r\n      texCoords[44] = 1.0;\r\n      texCoords[45] = 1.0;\r\n      texCoords[46] = 0.0;\r\n      texCoords[47] = 1.0;\r\n\r\n      attributes.st = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 2,\r\n        values: texCoords,\r\n      });\r\n    }\r\n\r\n    if (vertexFormat.tangent) {\r\n      var tangents = new Float32Array(6 * 4 * 3);\r\n\r\n      // +z face\r\n      tangents[0] = 1.0;\r\n      tangents[1] = 0.0;\r\n      tangents[2] = 0.0;\r\n      tangents[3] = 1.0;\r\n      tangents[4] = 0.0;\r\n      tangents[5] = 0.0;\r\n      tangents[6] = 1.0;\r\n      tangents[7] = 0.0;\r\n      tangents[8] = 0.0;\r\n      tangents[9] = 1.0;\r\n      tangents[10] = 0.0;\r\n      tangents[11] = 0.0;\r\n\r\n      // -z face\r\n      tangents[12] = -1.0;\r\n      tangents[13] = 0.0;\r\n      tangents[14] = 0.0;\r\n      tangents[15] = -1.0;\r\n      tangents[16] = 0.0;\r\n      tangents[17] = 0.0;\r\n      tangents[18] = -1.0;\r\n      tangents[19] = 0.0;\r\n      tangents[20] = 0.0;\r\n      tangents[21] = -1.0;\r\n      tangents[22] = 0.0;\r\n      tangents[23] = 0.0;\r\n\r\n      // +x face\r\n      tangents[24] = 0.0;\r\n      tangents[25] = 1.0;\r\n      tangents[26] = 0.0;\r\n      tangents[27] = 0.0;\r\n      tangents[28] = 1.0;\r\n      tangents[29] = 0.0;\r\n      tangents[30] = 0.0;\r\n      tangents[31] = 1.0;\r\n      tangents[32] = 0.0;\r\n      tangents[33] = 0.0;\r\n      tangents[34] = 1.0;\r\n      tangents[35] = 0.0;\r\n\r\n      // -x face\r\n      tangents[36] = 0.0;\r\n      tangents[37] = -1.0;\r\n      tangents[38] = 0.0;\r\n      tangents[39] = 0.0;\r\n      tangents[40] = -1.0;\r\n      tangents[41] = 0.0;\r\n      tangents[42] = 0.0;\r\n      tangents[43] = -1.0;\r\n      tangents[44] = 0.0;\r\n      tangents[45] = 0.0;\r\n      tangents[46] = -1.0;\r\n      tangents[47] = 0.0;\r\n\r\n      // +y face\r\n      tangents[48] = -1.0;\r\n      tangents[49] = 0.0;\r\n      tangents[50] = 0.0;\r\n      tangents[51] = -1.0;\r\n      tangents[52] = 0.0;\r\n      tangents[53] = 0.0;\r\n      tangents[54] = -1.0;\r\n      tangents[55] = 0.0;\r\n      tangents[56] = 0.0;\r\n      tangents[57] = -1.0;\r\n      tangents[58] = 0.0;\r\n      tangents[59] = 0.0;\r\n\r\n      // -y face\r\n      tangents[60] = 1.0;\r\n      tangents[61] = 0.0;\r\n      tangents[62] = 0.0;\r\n      tangents[63] = 1.0;\r\n      tangents[64] = 0.0;\r\n      tangents[65] = 0.0;\r\n      tangents[66] = 1.0;\r\n      tangents[67] = 0.0;\r\n      tangents[68] = 0.0;\r\n      tangents[69] = 1.0;\r\n      tangents[70] = 0.0;\r\n      tangents[71] = 0.0;\r\n\r\n      attributes.tangent = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 3,\r\n        values: tangents,\r\n      });\r\n    }\r\n\r\n    if (vertexFormat.bitangent) {\r\n      var bitangents = new Float32Array(6 * 4 * 3);\r\n\r\n      // +z face\r\n      bitangents[0] = 0.0;\r\n      bitangents[1] = 1.0;\r\n      bitangents[2] = 0.0;\r\n      bitangents[3] = 0.0;\r\n      bitangents[4] = 1.0;\r\n      bitangents[5] = 0.0;\r\n      bitangents[6] = 0.0;\r\n      bitangents[7] = 1.0;\r\n      bitangents[8] = 0.0;\r\n      bitangents[9] = 0.0;\r\n      bitangents[10] = 1.0;\r\n      bitangents[11] = 0.0;\r\n\r\n      // -z face\r\n      bitangents[12] = 0.0;\r\n      bitangents[13] = 1.0;\r\n      bitangents[14] = 0.0;\r\n      bitangents[15] = 0.0;\r\n      bitangents[16] = 1.0;\r\n      bitangents[17] = 0.0;\r\n      bitangents[18] = 0.0;\r\n      bitangents[19] = 1.0;\r\n      bitangents[20] = 0.0;\r\n      bitangents[21] = 0.0;\r\n      bitangents[22] = 1.0;\r\n      bitangents[23] = 0.0;\r\n\r\n      // +x face\r\n      bitangents[24] = 0.0;\r\n      bitangents[25] = 0.0;\r\n      bitangents[26] = 1.0;\r\n      bitangents[27] = 0.0;\r\n      bitangents[28] = 0.0;\r\n      bitangents[29] = 1.0;\r\n      bitangents[30] = 0.0;\r\n      bitangents[31] = 0.0;\r\n      bitangents[32] = 1.0;\r\n      bitangents[33] = 0.0;\r\n      bitangents[34] = 0.0;\r\n      bitangents[35] = 1.0;\r\n\r\n      // -x face\r\n      bitangents[36] = 0.0;\r\n      bitangents[37] = 0.0;\r\n      bitangents[38] = 1.0;\r\n      bitangents[39] = 0.0;\r\n      bitangents[40] = 0.0;\r\n      bitangents[41] = 1.0;\r\n      bitangents[42] = 0.0;\r\n      bitangents[43] = 0.0;\r\n      bitangents[44] = 1.0;\r\n      bitangents[45] = 0.0;\r\n      bitangents[46] = 0.0;\r\n      bitangents[47] = 1.0;\r\n\r\n      // +y face\r\n      bitangents[48] = 0.0;\r\n      bitangents[49] = 0.0;\r\n      bitangents[50] = 1.0;\r\n      bitangents[51] = 0.0;\r\n      bitangents[52] = 0.0;\r\n      bitangents[53] = 1.0;\r\n      bitangents[54] = 0.0;\r\n      bitangents[55] = 0.0;\r\n      bitangents[56] = 1.0;\r\n      bitangents[57] = 0.0;\r\n      bitangents[58] = 0.0;\r\n      bitangents[59] = 1.0;\r\n\r\n      // -y face\r\n      bitangents[60] = 0.0;\r\n      bitangents[61] = 0.0;\r\n      bitangents[62] = 1.0;\r\n      bitangents[63] = 0.0;\r\n      bitangents[64] = 0.0;\r\n      bitangents[65] = 1.0;\r\n      bitangents[66] = 0.0;\r\n      bitangents[67] = 0.0;\r\n      bitangents[68] = 1.0;\r\n      bitangents[69] = 0.0;\r\n      bitangents[70] = 0.0;\r\n      bitangents[71] = 1.0;\r\n\r\n      attributes.bitangent = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 3,\r\n        values: bitangents,\r\n      });\r\n    }\r\n\r\n    // 12 triangles:  6 faces, 2 triangles each.\r\n    indices = new Uint16Array(6 * 2 * 3);\r\n\r\n    // +z face\r\n    indices[0] = 0;\r\n    indices[1] = 1;\r\n    indices[2] = 2;\r\n    indices[3] = 0;\r\n    indices[4] = 2;\r\n    indices[5] = 3;\r\n\r\n    // -z face\r\n    indices[6] = 4 + 2;\r\n    indices[7] = 4 + 1;\r\n    indices[8] = 4 + 0;\r\n    indices[9] = 4 + 3;\r\n    indices[10] = 4 + 2;\r\n    indices[11] = 4 + 0;\r\n\r\n    // +x face\r\n    indices[12] = 8 + 0;\r\n    indices[13] = 8 + 1;\r\n    indices[14] = 8 + 2;\r\n    indices[15] = 8 + 0;\r\n    indices[16] = 8 + 2;\r\n    indices[17] = 8 + 3;\r\n\r\n    // -x face\r\n    indices[18] = 12 + 2;\r\n    indices[19] = 12 + 1;\r\n    indices[20] = 12 + 0;\r\n    indices[21] = 12 + 3;\r\n    indices[22] = 12 + 2;\r\n    indices[23] = 12 + 0;\r\n\r\n    // +y face\r\n    indices[24] = 16 + 2;\r\n    indices[25] = 16 + 1;\r\n    indices[26] = 16 + 0;\r\n    indices[27] = 16 + 3;\r\n    indices[28] = 16 + 2;\r\n    indices[29] = 16 + 0;\r\n\r\n    // -y face\r\n    indices[30] = 20 + 0;\r\n    indices[31] = 20 + 1;\r\n    indices[32] = 20 + 2;\r\n    indices[33] = 20 + 0;\r\n    indices[34] = 20 + 2;\r\n    indices[35] = 20 + 3;\r\n  } else {\r\n    // Positions only - no need to duplicate corner points\r\n    positions = new Float64Array(8 * 3);\r\n\r\n    positions[0] = min.x;\r\n    positions[1] = min.y;\r\n    positions[2] = min.z;\r\n    positions[3] = max.x;\r\n    positions[4] = min.y;\r\n    positions[5] = min.z;\r\n    positions[6] = max.x;\r\n    positions[7] = max.y;\r\n    positions[8] = min.z;\r\n    positions[9] = min.x;\r\n    positions[10] = max.y;\r\n    positions[11] = min.z;\r\n    positions[12] = min.x;\r\n    positions[13] = min.y;\r\n    positions[14] = max.z;\r\n    positions[15] = max.x;\r\n    positions[16] = min.y;\r\n    positions[17] = max.z;\r\n    positions[18] = max.x;\r\n    positions[19] = max.y;\r\n    positions[20] = max.z;\r\n    positions[21] = min.x;\r\n    positions[22] = max.y;\r\n    positions[23] = max.z;\r\n\r\n    attributes.position = new GeometryAttribute({\r\n      componentDatatype: ComponentDatatype.DOUBLE,\r\n      componentsPerAttribute: 3,\r\n      values: positions,\r\n    });\r\n\r\n    // 12 triangles:  6 faces, 2 triangles each.\r\n    indices = new Uint16Array(6 * 2 * 3);\r\n\r\n    // plane z = corner.Z\r\n    indices[0] = 4;\r\n    indices[1] = 5;\r\n    indices[2] = 6;\r\n    indices[3] = 4;\r\n    indices[4] = 6;\r\n    indices[5] = 7;\r\n\r\n    // plane z = -corner.Z\r\n    indices[6] = 1;\r\n    indices[7] = 0;\r\n    indices[8] = 3;\r\n    indices[9] = 1;\r\n    indices[10] = 3;\r\n    indices[11] = 2;\r\n\r\n    // plane x = corner.X\r\n    indices[12] = 1;\r\n    indices[13] = 6;\r\n    indices[14] = 5;\r\n    indices[15] = 1;\r\n    indices[16] = 2;\r\n    indices[17] = 6;\r\n\r\n    // plane y = corner.Y\r\n    indices[18] = 2;\r\n    indices[19] = 3;\r\n    indices[20] = 7;\r\n    indices[21] = 2;\r\n    indices[22] = 7;\r\n    indices[23] = 6;\r\n\r\n    // plane x = -corner.X\r\n    indices[24] = 3;\r\n    indices[25] = 0;\r\n    indices[26] = 4;\r\n    indices[27] = 3;\r\n    indices[28] = 4;\r\n    indices[29] = 7;\r\n\r\n    // plane y = -corner.Y\r\n    indices[30] = 0;\r\n    indices[31] = 1;\r\n    indices[32] = 5;\r\n    indices[33] = 0;\r\n    indices[34] = 5;\r\n    indices[35] = 4;\r\n  }\r\n\r\n  var diff = Cartesian3.subtract(max, min, diffScratch);\r\n  var radius = Cartesian3.magnitude(diff) * 0.5;\r\n\r\n  if (defined(boxGeometry._offsetAttribute)) {\r\n    var length = positions.length;\r\n    var applyOffset = new Uint8Array(length / 3);\r\n    var offsetValue =\r\n      boxGeometry._offsetAttribute === GeometryOffsetAttribute.NONE ? 0 : 1;\r\n    arrayFill(applyOffset, offsetValue);\r\n    attributes.applyOffset = new GeometryAttribute({\r\n      componentDatatype: ComponentDatatype.UNSIGNED_BYTE,\r\n      componentsPerAttribute: 1,\r\n      values: applyOffset,\r\n    });\r\n  }\r\n\r\n  return new Geometry({\r\n    attributes: attributes,\r\n    indices: indices,\r\n    primitiveType: PrimitiveType.TRIANGLES,\r\n    boundingSphere: new BoundingSphere(Cartesian3.ZERO, radius),\r\n    offsetAttribute: boxGeometry._offsetAttribute,\r\n  });\r\n};\r\n\r\nvar unitBoxGeometry;\r\n\r\n/**\r\n * Returns the geometric representation of a unit box, including its vertices, indices, and a bounding sphere.\r\n * @returns {Geometry} The computed vertices and indices.\r\n *\r\n * @private\r\n */\r\nBoxGeometry.getUnitBox = function () {\r\n  if (!defined(unitBoxGeometry)) {\r\n    unitBoxGeometry = BoxGeometry.createGeometry(\r\n      BoxGeometry.fromDimensions({\r\n        dimensions: new Cartesian3(1.0, 1.0, 1.0),\r\n        vertexFormat: VertexFormat.POSITION_ONLY,\r\n      })\r\n    );\r\n  }\r\n  return unitBoxGeometry;\r\n};\r\nexport default BoxGeometry;\r\n"],"names":["diffScratch","Cartesian3","BoxGeometry","options","min","defaultValue","EMPTY_OBJECT","minimum","max","maximum","Check","typeOf","object","defined","offsetAttribute","GeometryOffsetAttribute","TOP","DeveloperError","vertexFormat","VertexFormat","DEFAULT","this","_minimum","clone","_maximum","_vertexFormat","_offsetAttribute","_workerName","fromDimensions","dimensions","number","greaterThanOrEquals","x","y","z","corner","multiplyByScalar","negate","fromAxisAlignedBoundingBox","boundingBox","packedLength","pack","value","array","startingIndex","unitBoxGeometry","scratchMin","scratchMax","scratchVertexFormat","scratchOptions","undefined","unpack","result","createGeometry","boxGeometry","equals","indices","positions","attributes","GeometryAttributes","position","st","normal","tangent","bitangent","Float64Array","GeometryAttribute","componentDatatype","ComponentDatatype","DOUBLE","componentsPerAttribute","values","normals","Float32Array","FLOAT","texCoords","tangents","bitangents","Uint16Array","diff","subtract","radius","magnitude","length","applyOffset","Uint8Array","offsetValue","NONE","arrayFill","UNSIGNED_BYTE","Geometry","primitiveType","PrimitiveType","TRIANGLES","boundingSphere","BoundingSphere","ZERO","getUnitBox","POSITION_ONLY"],"mappings":"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"}