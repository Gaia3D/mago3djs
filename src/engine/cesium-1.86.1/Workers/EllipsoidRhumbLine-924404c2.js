define(["exports","./Matrix2-b06ef836","./RuntimeError-ffe03243","./when-229515d6","./ComponentDatatype-dc3af6a4"],(function(t,i,e,a,n){"use strict";function s(t,i,e){if(0===t)return i*e;var a=t*t,n=a*a,s=n*a,h=s*a,r=h*a,u=r*a,d=e;return i*((1-a/4-3*n/64-5*s/256-175*h/16384-441*r/65536-4851*u/1048576)*d-(3*a/8+3*n/32+45*s/1024+105*h/4096+2205*r/131072+6237*u/524288)*Math.sin(2*d)+(15*n/256+45*s/1024+525*h/16384+1575*r/65536+155925*u/8388608)*Math.sin(4*d)-(35*s/3072+175*h/12288+3675*r/262144+13475*u/1048576)*Math.sin(6*d)+(315*h/131072+2205*r/524288+43659*u/8388608)*Math.sin(8*d)-(693*r/1310720+6237*u/5242880)*Math.sin(10*d)+1001*u/8388608*Math.sin(12*d))}function h(t,i){if(0===t)return Math.log(Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+i)));var e=t*Math.sin(i);return Math.log(Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+i)))-t/2*Math.log((1+e)/(1-e))}var r=new i.Cartesian3,u=new i.Cartesian3;function d(t,a,d,o){var l=i.Cartesian3.normalize(o.cartographicToCartesian(a,u),r),c=i.Cartesian3.normalize(o.cartographicToCartesian(d,u),u);e.Check.typeOf.number.greaterThanOrEquals("value",Math.abs(Math.abs(i.Cartesian3.angleBetween(l,c))-Math.PI),.0125);var M=o.maximumRadius,m=o.minimumRadius,_=M*M,f=m*m;t._ellipticitySquared=(_-f)/_,t._ellipticity=Math.sqrt(t._ellipticitySquared),t._start=i.Cartographic.clone(a,t._start),t._start.height=0,t._end=i.Cartographic.clone(d,t._end),t._end.height=0,t._heading=function(t,i,e,a,s){var r=h(t._ellipticity,e),u=h(t._ellipticity,s);return Math.atan2(n.CesiumMath.negativePiToPi(a-i),u-r)}(t,a.longitude,a.latitude,d.longitude,d.latitude),t._distance=function(t,i,e,a,h,r,u){var d=t._heading,o=r-a,l=0;if(n.CesiumMath.equalsEpsilon(Math.abs(d),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8))if(i===e)l=i*Math.cos(h)*n.CesiumMath.negativePiToPi(o);else{var c=Math.sin(h);l=i*Math.cos(h)*n.CesiumMath.negativePiToPi(o)/Math.sqrt(1-t._ellipticitySquared*c*c)}else{var M=s(t._ellipticity,i,h);l=(s(t._ellipticity,i,u)-M)/Math.cos(d)}return Math.abs(l)}(t,o.maximumRadius,o.minimumRadius,a.longitude,a.latitude,d.longitude,d.latitude)}function o(t,e,r,u,d,o){if(0===r)return i.Cartographic.clone(t,o);var l,c,M,m=d*d;if(Math.abs(n.CesiumMath.PI_OVER_TWO-Math.abs(e))>n.CesiumMath.EPSILON8){c=function(t,i,e){var a=t/e;if(0===i)return a;var n=a*a,s=n*a,h=s*a,r=i*i,u=r*r,d=u*r,o=d*r,l=o*r,c=l*r,M=Math.sin(2*a),m=Math.cos(2*a),_=Math.sin(4*a),f=Math.cos(4*a),g=Math.sin(6*a),p=Math.cos(6*a),C=Math.sin(8*a),P=Math.cos(8*a),v=Math.sin(10*a);return a+a*r/4+7*a*u/64+15*a*d/256+579*a*o/16384+1515*a*l/65536+16837*a*c/1048576+(3*a*u/16+45*a*d/256-a*(32*n-561)*o/4096-a*(232*n-1677)*l/16384+a*(399985-90560*n+512*h)*c/5242880)*m+(21*a*d/256+483*a*o/4096-a*(224*n-1969)*l/16384-a*(33152*n-112599)*c/1048576)*f+(151*a*o/4096+4681*a*l/65536+1479*a*c/16384-453*s*c/32768)*p+(1097*a*l/65536+42783*a*c/1048576)*P+8011*a*c/1048576*Math.cos(10*a)+(3*r/8+3*u/16+213*d/2048-3*n*d/64+255*o/4096-33*n*o/512+20861*l/524288-33*n*l/512+h*l/1024+28273*c/1048576-471*n*c/8192+9*h*c/4096)*M+(21*u/256+21*d/256+533*o/8192-21*n*o/512+197*l/4096-315*n*l/4096+584039*c/16777216-12517*n*c/131072+7*h*c/2048)*_+(151*d/6144+151*o/4096+5019*l/131072-453*n*l/16384+26965*c/786432-8607*n*c/131072)*g+(1097*o/131072+1097*l/65536+225797*c/10485760-1097*n*c/65536)*C+(8011*l/2621440+8011*c/1048576)*v+293393*c/251658240*Math.sin(12*a)}(s(d,u,t.latitude)+r*Math.cos(e),d,u);var _=h(d,t.latitude),f=h(d,c);M=Math.tan(e)*(f-_),l=n.CesiumMath.negativePiToPi(t.longitude+M)}else{var g;if(c=t.latitude,0===d)g=u*Math.cos(t.latitude);else{var p=Math.sin(t.latitude);g=u*Math.cos(t.latitude)/Math.sqrt(1-m*p*p)}M=r/g,l=e>0?n.CesiumMath.negativePiToPi(t.longitude+M):n.CesiumMath.negativePiToPi(t.longitude-M)}return a.defined(o)?(o.longitude=l,o.latitude=c,o.height=0,o):new i.Cartographic(l,c,0)}function l(t,e,n){var s=a.defaultValue(n,i.Ellipsoid.WGS84);this._ellipsoid=s,this._start=new i.Cartographic,this._end=new i.Cartographic,this._heading=void 0,this._distance=void 0,this._ellipticity=void 0,this._ellipticitySquared=void 0,a.defined(t)&&a.defined(e)&&d(this,t,e,s)}Object.defineProperties(l.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return e.Check.defined("distance",this._distance),this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},heading:{get:function(){return e.Check.defined("distance",this._distance),this._heading}}}),l.fromStartHeadingDistance=function(t,s,h,r,u){e.Check.defined("start",t),e.Check.defined("heading",s),e.Check.defined("distance",h),e.Check.typeOf.number.greaterThan("distance",h,0);var d=a.defaultValue(r,i.Ellipsoid.WGS84),c=d.maximumRadius,M=d.minimumRadius,m=c*c,_=M*M,f=Math.sqrt((m-_)/m),g=o(t,s=n.CesiumMath.negativePiToPi(s),h,d.maximumRadius,f);return!a.defined(u)||a.defined(r)&&!r.equals(u.ellipsoid)?new l(t,g,d):(u.setEndPoints(t,g),u)},l.prototype.setEndPoints=function(t,i){e.Check.defined("start",t),e.Check.defined("end",i),d(this,t,i,this._ellipsoid)},l.prototype.interpolateUsingFraction=function(t,i){return this.interpolateUsingSurfaceDistance(t*this._distance,i)},l.prototype.interpolateUsingSurfaceDistance=function(t,i){if(e.Check.typeOf.number("distance",t),!a.defined(this._distance)||0===this._distance)throw new e.DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");return o(this._start,this._heading,t,this._ellipsoid.maximumRadius,this._ellipticity,i)},l.prototype.findIntersectionWithLongitude=function(t,s){if(e.Check.typeOf.number("intersectionLongitude",t),!a.defined(this._distance)||0===this._distance)throw new e.DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");var h=this._ellipticity,r=this._heading,u=Math.abs(r),d=this._start;if(t=n.CesiumMath.negativePiToPi(t),n.CesiumMath.equalsEpsilon(Math.abs(t),Math.PI,n.CesiumMath.EPSILON14)&&(t=n.CesiumMath.sign(d.longitude)*Math.PI),a.defined(s)||(s=new i.Cartographic),Math.abs(n.CesiumMath.PI_OVER_TWO-u)<=n.CesiumMath.EPSILON8)return s.longitude=t,s.latitude=d.latitude,s.height=0,s;if(n.CesiumMath.equalsEpsilon(Math.abs(n.CesiumMath.PI_OVER_TWO-u),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8)){if(n.CesiumMath.equalsEpsilon(t,d.longitude,n.CesiumMath.EPSILON12))return;return s.longitude=t,s.latitude=n.CesiumMath.PI_OVER_TWO*n.CesiumMath.sign(n.CesiumMath.PI_OVER_TWO-r),s.height=0,s}var o,l=d.latitude,c=h*Math.sin(l),M=Math.tan(.5*(n.CesiumMath.PI_OVER_TWO+l))*Math.exp((t-d.longitude)/Math.tan(r)),m=(1+c)/(1-c),_=d.latitude;do{o=_;var f=h*Math.sin(o),g=(1+f)/(1-f);_=2*Math.atan(M*Math.pow(g/m,h/2))-n.CesiumMath.PI_OVER_TWO}while(!n.CesiumMath.equalsEpsilon(_,o,n.CesiumMath.EPSILON12));return s.longitude=t,s.latitude=_,s.height=0,s},l.prototype.findIntersectionWithLatitude=function(t,s){if(e.Check.typeOf.number("intersectionLatitude",t),!a.defined(this._distance)||0===this._distance)throw new e.DeveloperError("EllipsoidRhumbLine must have distinct start and end set.");var r=this._ellipticity,u=this._heading,d=this._start;if(!n.CesiumMath.equalsEpsilon(Math.abs(u),n.CesiumMath.PI_OVER_TWO,n.CesiumMath.EPSILON8)){var o=h(r,d.latitude),l=h(r,t),c=Math.tan(u)*(l-o),M=n.CesiumMath.negativePiToPi(d.longitude+c);return a.defined(s)?(s.longitude=M,s.latitude=t,s.height=0,s):new i.Cartographic(M,t,0)}},t.EllipsoidRhumbLine=l}));
//# sourceMappingURL=EllipsoidRhumbLine-924404c2.js.map
